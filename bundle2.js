(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Alt/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Alt = function (__superclass_Prelude$dotFunctor_0, alt) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.alt = alt;
};
var altArray = new Alt(function () {
    return Prelude.functorArray;
}, Prelude.append(Prelude.semigroupArray));
var alt = function (dict) {
    return dict.alt;
};
var $less$bar$greater = function (__dict_Alt_0) {
    return alt(__dict_Alt_0);
};
module.exports = {
    Alt: Alt, 
    "<|>": $less$bar$greater, 
    alt: alt, 
    altArray: altArray
};

},{"Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Alternative/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Control_Plus = require("Control.Plus");
var Alternative = function (__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
    this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
};
var alternativeArray = new Alternative(function () {
    return Control_Plus.plusArray;
}, function () {
    return Prelude.applicativeArray;
});
module.exports = {
    Alternative: Alternative, 
    alternativeArray: alternativeArray
};

},{"Control.Plus":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Plus/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Apply/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var $less$times = function (__dict_Apply_0) {
    return function (a) {
        return function (b) {
            return Prelude["<*>"](__dict_Apply_0)(Prelude["<$>"](__dict_Apply_0["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
        };
    };
};
var $times$greater = function (__dict_Apply_1) {
    return function (a) {
        return function (b) {
            return Prelude["<*>"](__dict_Apply_1)(Prelude["<$>"](__dict_Apply_1["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(a))(b);
        };
    };
};
var lift5 = function (__dict_Apply_2) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return Prelude["<*>"](__dict_Apply_2)(Prelude["<*>"](__dict_Apply_2)(Prelude["<*>"](__dict_Apply_2)(Prelude["<*>"](__dict_Apply_2)(Prelude["<$>"](__dict_Apply_2["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                        };
                    };
                };
            };
        };
    };
};
var lift4 = function (__dict_Apply_3) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return Prelude["<*>"](__dict_Apply_3)(Prelude["<*>"](__dict_Apply_3)(Prelude["<*>"](__dict_Apply_3)(Prelude["<$>"](__dict_Apply_3["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                    };
                };
            };
        };
    };
};
var lift3 = function (__dict_Apply_4) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return Prelude["<*>"](__dict_Apply_4)(Prelude["<*>"](__dict_Apply_4)(Prelude["<$>"](__dict_Apply_4["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                };
            };
        };
    };
};
var lift2 = function (__dict_Apply_5) {
    return function (f) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_5)(Prelude["<$>"](__dict_Apply_5["__superclass_Prelude.Functor_0"]())(f)(a))(b);
            };
        };
    };
};
module.exports = {
    lift5: lift5, 
    lift4: lift4, 
    lift3: lift3, 
    lift2: lift2, 
    "*>": $times$greater, 
    "<*": $less$times
};

},{"Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Biapplicative/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Control_Biapply = require("Control.Biapply");
var Biapplicative = function (__superclass_Control$dotBiapply$dotBiapply_0, bipure) {
    this["__superclass_Control.Biapply.Biapply_0"] = __superclass_Control$dotBiapply$dotBiapply_0;
    this.bipure = bipure;
};
var bipure = function (dict) {
    return dict.bipure;
};
module.exports = {
    Biapplicative: Biapplicative, 
    bipure: bipure
};

},{"Control.Biapply":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Biapply/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Biapply/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Data_Bifunctor = require("Data.Bifunctor");
var Biapply = function (__superclass_Data$dotBifunctor$dotBifunctor_0, biapply) {
    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
    this.biapply = biapply;
};
var $less$less$dollar$greater$greater = Prelude.id(Prelude.categoryFn);
var biapply = function (dict) {
    return dict.biapply;
};
var $less$less$times$greater$greater = function (__dict_Biapply_0) {
    return biapply(__dict_Biapply_0);
};
var bilift2 = function (__dict_Biapply_1) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return $less$less$times$greater$greater(__dict_Biapply_1)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_1["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b);
                };
            };
        };
    };
};
var bilift3 = function (__dict_Biapply_2) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return $less$less$times$greater$greater(__dict_Biapply_2)($less$less$times$greater$greater(__dict_Biapply_2)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_2["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b))(c);
                    };
                };
            };
        };
    };
};
var $times$greater$greater = function (__dict_Biapply_3) {
    return function (a) {
        return function (b) {
            return $less$less$times$greater$greater(__dict_Biapply_3)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_3["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(Prelude["const"](Prelude.id(Prelude.categoryFn))))(a))(b);
        };
    };
};
var $less$less$times = function (__dict_Biapply_4) {
    return function (a) {
        return function (b) {
            return $less$less$times$greater$greater(__dict_Biapply_4)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_4["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"])(Prelude["const"]))(a))(b);
        };
    };
};
module.exports = {
    Biapply: Biapply, 
    bilift3: bilift3, 
    bilift2: bilift2, 
    "<<*": $less$less$times, 
    "*>>": $times$greater$greater, 
    "<<*>>": $less$less$times$greater$greater, 
    biapply: biapply, 
    "<<$>>": $less$less$dollar$greater$greater
};

},{"Data.Bifunctor":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Bifunctor/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Comonad/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Control_Extend = require("Control.Extend");
var Comonad = function (__superclass_Control$dotExtend$dotExtend_0, extract) {
    this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
    this.extract = extract;
};
var extract = function (dict) {
    return dict.extract;
};
module.exports = {
    Comonad: Comonad, 
    extract: extract
};

},{"Control.Extend":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Extend/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Extend/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Extend = function (__superclass_Prelude$dotFunctor_0, extend) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.extend = extend;
};
var extendFn = function (__dict_Semigroup_0) {
    return new Extend(function () {
        return Prelude.functorFn;
    }, function (f) {
        return function (g) {
            return function (w) {
                return f(function (w$prime) {
                    return g(Prelude["<>"](__dict_Semigroup_0)(w)(w$prime));
                });
            };
        };
    });
};
var extend = function (dict) {
    return dict.extend;
};
var $less$less$eq = function (__dict_Extend_1) {
    return extend(__dict_Extend_1);
};
var $eq$less$eq = function (__dict_Extend_2) {
    return function (f) {
        return function (g) {
            return function (w) {
                return f($less$less$eq(__dict_Extend_2)(g)(w));
            };
        };
    };
};
var $eq$greater$eq = function (__dict_Extend_3) {
    return function (f) {
        return function (g) {
            return function (w) {
                return g($less$less$eq(__dict_Extend_3)(f)(w));
            };
        };
    };
};
var $eq$greater$greater = function (__dict_Extend_4) {
    return function (w) {
        return function (f) {
            return $less$less$eq(__dict_Extend_4)(f)(w);
        };
    };
};
var duplicate = function (__dict_Extend_5) {
    return extend(__dict_Extend_5)(Prelude.id(Prelude.categoryFn));
};
module.exports = {
    Extend: Extend, 
    duplicate: duplicate, 
    "=<=": $eq$less$eq, 
    "=>=": $eq$greater$eq, 
    "=>>": $eq$greater$greater, 
    "<<=": $less$less$eq, 
    extend: extend, 
    extendFn: extendFn
};

},{"Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Lazy/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Lazy = function (defer) {
    this.defer = defer;
};
var defer = function (dict) {
    return dict.defer;
};
var fix = function (__dict_Lazy_0) {
    return function (f) {
        return defer(__dict_Lazy_0)(function (_0) {
            return f(fix(__dict_Lazy_0)(f));
        });
    };
};
module.exports = {
    Lazy: Lazy, 
    fix: fix, 
    defer: defer
};

},{"Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Monad.Eff/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Eff

exports.returnE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.runPure = function (f) {
  return f();
};

exports.untilE = function (f) {
  return function () {
    while (!f());
    return {};
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
      return {};
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

},{}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Monad.Eff/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var monadEff = new Prelude.Monad(function () {
    return applicativeEff;
}, function () {
    return bindEff;
});
var bindEff = new Prelude.Bind(function () {
    return applyEff;
}, $foreign.bindE);
var applyEff = new Prelude.Apply(function () {
    return functorEff;
}, Prelude.ap(monadEff));
var applicativeEff = new Prelude.Applicative(function () {
    return applyEff;
}, $foreign.returnE);
var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
module.exports = {
    functorEff: functorEff, 
    applyEff: applyEff, 
    applicativeEff: applicativeEff, 
    bindEff: bindEff, 
    monadEff: monadEff, 
    foreachE: $foreign.foreachE, 
    forE: $foreign.forE, 
    whileE: $foreign.whileE, 
    untilE: $foreign.untilE, 
    runPure: $foreign.runPure
};

},{"./foreign":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Monad.Eff/foreign.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Monad.ST/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.ST

exports.newSTRef = function (val) {
  return function () {
    return { value: val };
  };
};

exports.readSTRef = function (ref) {
  return function () {
    return ref.value;
  };
};

exports.modifySTRef = function (ref) {
  return function (f) {
    return function () {
      /* jshint boss: true */
      return ref.value = f(ref.value);
    };
  };
};

exports.writeSTRef = function (ref) {
  return function (a) {
    return function () {
      /* jshint boss: true */
      return ref.value = a;
    };
  };
};

exports.runST = function (f) {
  return f;
};

},{}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Monad.ST/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var pureST = function (st) {
    return Control_Monad_Eff.runPure($foreign.runST(st));
};
module.exports = {
    pureST: pureST, 
    runST: $foreign.runST, 
    writeSTRef: $foreign.writeSTRef, 
    modifySTRef: $foreign.modifySTRef, 
    readSTRef: $foreign.readSTRef, 
    newSTRef: $foreign.newSTRef
};

},{"./foreign":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Monad.ST/foreign.js","Control.Monad.Eff":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Monad.Eff/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.MonadPlus/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Control_Alternative = require("Control.Alternative");
var Control_Plus = require("Control.Plus");
var MonadPlus = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
    this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
};
var monadPlusArray = new MonadPlus(function () {
    return Control_Alternative.alternativeArray;
}, function () {
    return Prelude.monadArray;
});
var guard = function (__dict_MonadPlus_0) {
    return function (_0) {
        if (_0) {
            return Prelude["return"]((__dict_MonadPlus_0["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
        };
        if (!_0) {
            return Control_Plus.empty((__dict_MonadPlus_0["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
        };
        throw new Error("Failed pattern match at Control.MonadPlus line 35, column 1 - line 36, column 1: " + [ _0.constructor.name ]);
    };
};
module.exports = {
    MonadPlus: MonadPlus, 
    guard: guard, 
    monadPlusArray: monadPlusArray
};

},{"Control.Alternative":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Alternative/index.js","Control.Plus":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Plus/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Plus/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
    this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
    this.empty = empty;
};
var plusArray = new Plus(function () {
    return Control_Alt.altArray;
}, [  ]);
var empty = function (dict) {
    return dict.empty;
};
module.exports = {
    Plus: Plus, 
    empty: empty, 
    plusArray: plusArray
};

},{"Control.Alt":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Alt/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Array.ST/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Array.ST

exports.runSTArray = function (f) {
  return f;
};

exports.emptySTArray = function () {
  return [];
};

exports.peekSTArrayImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return function () {
          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
        };
      };
    };
  };
};

exports.pokeSTArray = function (xs) {
  return function (i) {
    return function (a) {
      return function () {
        var ret = i >= 0 && i < xs.length;
        if (ret) xs[i] = a;
        return ret;
      };
    };
  };
};

exports.pushAllSTArray = function (xs) {
  return function (as) {
    return function () {
      return xs.push.apply(xs, as);
    };
  };
};

exports.spliceSTArray = function (xs) {
  return function (i) {
    return function (howMany) {
      return function (bs) {
        return function () {
          return xs.splice.apply(xs, [i, howMany].concat(bs));
        };
      };
    };
  };
};

exports.copyImpl = function (xs) {
  return function () {
    return xs.slice();
  };
};

exports.toAssocArray = function (xs) {
  return function () {
    var n = xs.length;
    var as = new Array(n);
    for (var i = 0; i < n; i++) as[i] = { value: xs[i], index: i };
    return as;
  };
};

},{}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Array.ST/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_ST = require("Control.Monad.ST");
var Data_Maybe = require("Data.Maybe");
var thaw = $foreign.copyImpl;
var pushSTArray = function (arr) {
    return function (a) {
        return $foreign.pushAllSTArray(arr)([ a ]);
    };
};
var peekSTArray = $foreign.peekSTArrayImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var freeze = $foreign.copyImpl;
module.exports = {
    thaw: thaw, 
    freeze: freeze, 
    pushSTArray: pushSTArray, 
    peekSTArray: peekSTArray, 
    toAssocArray: $foreign.toAssocArray, 
    spliceSTArray: $foreign.spliceSTArray, 
    pushAllSTArray: $foreign.pushAllSTArray, 
    pokeSTArray: $foreign.pokeSTArray, 
    emptySTArray: $foreign.emptySTArray, 
    runSTArray: $foreign.runSTArray
};

},{"./foreign":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Array.ST/foreign.js","Control.Monad.Eff":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Monad.Eff/index.js","Control.Monad.ST":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Monad.ST/index.js","Data.Maybe":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Maybe/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Bifoldable/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Control_Apply = require("Control.Apply");
var Data_Monoid = require("Data.Monoid");
var Data_Monoid_Disj = require("Data.Monoid.Disj");
var Data_Monoid_Conj = require("Data.Monoid.Conj");
var Data_Monoid_Endo = require("Data.Monoid.Endo");
var Data_Monoid_Dual = require("Data.Monoid.Dual");
var Bifoldable = function (bifoldMap, bifoldl, bifoldr) {
    this.bifoldMap = bifoldMap;
    this.bifoldl = bifoldl;
    this.bifoldr = bifoldr;
};
var bifoldr = function (dict) {
    return dict.bifoldr;
};
var bitraverse_ = function (__dict_Bifoldable_0) {
    return function (__dict_Applicative_1) {
        return function (f) {
            return function (g) {
                return bifoldr(__dict_Bifoldable_0)(function (_0) {
                    return Control_Apply["*>"](__dict_Applicative_1["__superclass_Prelude.Apply_0"]())(f(_0));
                })(function (_1) {
                    return Control_Apply["*>"](__dict_Applicative_1["__superclass_Prelude.Apply_0"]())(g(_1));
                })(Prelude.pure(__dict_Applicative_1)(Prelude.unit));
            };
        };
    };
};
var bifor_ = function (__dict_Bifoldable_2) {
    return function (__dict_Applicative_3) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse_(__dict_Bifoldable_2)(__dict_Applicative_3)(f)(g)(t);
                };
            };
        };
    };
};
var bisequence_ = function (__dict_Bifoldable_4) {
    return function (__dict_Applicative_5) {
        return bitraverse_(__dict_Bifoldable_4)(__dict_Applicative_5)(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn));
    };
};
var bifoldl = function (dict) {
    return dict.bifoldl;
};
var bifoldMapDefaultR = function (__dict_Bifoldable_6) {
    return function (__dict_Monoid_7) {
        return function (f) {
            return function (g) {
                return function (p) {
                    return bifoldr(__dict_Bifoldable_6)(function (_2) {
                        return Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(f(_2));
                    })(function (_3) {
                        return Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(g(_3));
                    })(Data_Monoid.mempty(__dict_Monoid_7))(p);
                };
            };
        };
    };
};
var bifoldMapDefaultL = function (__dict_Bifoldable_8) {
    return function (__dict_Monoid_9) {
        return function (f) {
            return function (g) {
                return function (p) {
                    return bifoldl(__dict_Bifoldable_8)(function (m) {
                        return function (a) {
                            return Prelude["<>"](__dict_Monoid_9["__superclass_Prelude.Semigroup_0"]())(m)(f(a));
                        };
                    })(function (m) {
                        return function (b) {
                            return Prelude["<>"](__dict_Monoid_9["__superclass_Prelude.Semigroup_0"]())(m)(g(b));
                        };
                    })(Data_Monoid.mempty(__dict_Monoid_9))(p);
                };
            };
        };
    };
};
var bifoldMap = function (dict) {
    return dict.bifoldMap;
};
var bifoldlDefault = function (__dict_Bifoldable_10) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Monoid_Endo.runEndo(Data_Monoid_Dual.runDual(bifoldMap(__dict_Bifoldable_10)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function (_4) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Prelude.flip(f)(_4)));
                    })(function (_5) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Prelude.flip(g)(_5)));
                    })(p)))(z);
                };
            };
        };
    };
};
var bifoldrDefault = function (__dict_Bifoldable_11) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Monoid_Endo.runEndo(bifoldMap(__dict_Bifoldable_11)(Data_Monoid_Endo.monoidEndo)(function (_6) {
                        return Data_Monoid_Endo.Endo(f(_6));
                    })(function (_7) {
                        return Data_Monoid_Endo.Endo(g(_7));
                    })(p))(z);
                };
            };
        };
    };
};
var bifold = function (__dict_Bifoldable_12) {
    return function (__dict_Monoid_13) {
        return bifoldMap(__dict_Bifoldable_12)(__dict_Monoid_13)(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn));
    };
};
var biany = function (__dict_Bifoldable_14) {
    return function (__dict_BooleanAlgebra_15) {
        return function (p) {
            return function (q) {
                return function (_8) {
                    return Data_Monoid_Disj.runDisj(bifoldMap(__dict_Bifoldable_14)(Data_Monoid_Disj.monoidDisj(__dict_BooleanAlgebra_15))(function (_9) {
                        return Data_Monoid_Disj.Disj(p(_9));
                    })(function (_10) {
                        return Data_Monoid_Disj.Disj(q(_10));
                    })(_8));
                };
            };
        };
    };
};
var biall = function (__dict_Bifoldable_16) {
    return function (__dict_BooleanAlgebra_17) {
        return function (p) {
            return function (q) {
                return function (_11) {
                    return Data_Monoid_Conj.runConj(bifoldMap(__dict_Bifoldable_16)(Data_Monoid_Conj.monoidConj(__dict_BooleanAlgebra_17))(function (_12) {
                        return Data_Monoid_Conj.Conj(p(_12));
                    })(function (_13) {
                        return Data_Monoid_Conj.Conj(q(_13));
                    })(_11));
                };
            };
        };
    };
};
module.exports = {
    Bifoldable: Bifoldable, 
    biall: biall, 
    biany: biany, 
    bisequence_: bisequence_, 
    bifor_: bifor_, 
    bitraverse_: bitraverse_, 
    bifold: bifold, 
    bifoldMapDefaultL: bifoldMapDefaultL, 
    bifoldMapDefaultR: bifoldMapDefaultR, 
    bifoldlDefault: bifoldlDefault, 
    bifoldrDefault: bifoldrDefault, 
    bifoldMap: bifoldMap, 
    bifoldl: bifoldl, 
    bifoldr: bifoldr
};

},{"Control.Apply":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Apply/index.js","Data.Monoid":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid/index.js","Data.Monoid.Conj":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Conj/index.js","Data.Monoid.Disj":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Disj/index.js","Data.Monoid.Dual":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Dual/index.js","Data.Monoid.Endo":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Endo/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Bifunctor/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Bifunctor = function (bimap) {
    this.bimap = bimap;
};
var bimap = function (dict) {
    return dict.bimap;
};
var lmap = function (__dict_Bifunctor_0) {
    return function (f) {
        return bimap(__dict_Bifunctor_0)(f)(Prelude.id(Prelude.categoryFn));
    };
};
var rmap = function (__dict_Bifunctor_1) {
    return bimap(__dict_Bifunctor_1)(Prelude.id(Prelude.categoryFn));
};
module.exports = {
    Bifunctor: Bifunctor, 
    rmap: rmap, 
    lmap: lmap, 
    bimap: bimap
};

},{"Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Bitraversable/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Bifunctor = require("Data.Bifunctor");
var Bitraversable = function (__superclass_Data$dotBifoldable$dotBifoldable_1, __superclass_Data$dotBifunctor$dotBifunctor_0, bisequence, bitraverse) {
    this["__superclass_Data.Bifoldable.Bifoldable_1"] = __superclass_Data$dotBifoldable$dotBifoldable_1;
    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
    this.bisequence = bisequence;
    this.bitraverse = bitraverse;
};
var bitraverse = function (dict) {
    return dict.bitraverse;
};
var bisequenceDefault = function (__dict_Bitraversable_0) {
    return function (__dict_Applicative_1) {
        return function (t) {
            return bitraverse(__dict_Bitraversable_0)(__dict_Applicative_1)(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn))(t);
        };
    };
};
var bisequence = function (dict) {
    return dict.bisequence;
};
var bitraverseDefault = function (__dict_Bitraversable_2) {
    return function (__dict_Applicative_3) {
        return function (f) {
            return function (g) {
                return function (t) {
                    return bisequence(__dict_Bitraversable_2)(__dict_Applicative_3)(Data_Bifunctor.bimap(__dict_Bitraversable_2["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g)(t));
                };
            };
        };
    };
};
var bifor = function (__dict_Bitraversable_4) {
    return function (__dict_Applicative_5) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse(__dict_Bitraversable_4)(__dict_Applicative_5)(f)(g)(t);
                };
            };
        };
    };
};
module.exports = {
    Bitraversable: Bitraversable, 
    bifor: bifor, 
    bisequenceDefault: bisequenceDefault, 
    bitraverseDefault: bitraverseDefault, 
    bisequence: bisequence, 
    bitraverse: bitraverse
};

},{"Data.Bifoldable":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Bifoldable/index.js","Data.Bifunctor":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Bifunctor/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Foldable/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Foldable

exports.foldrArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
      }
      return acc;
    };
  };
};

exports.foldlArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
      }
      return acc;
    };
  };
};

},{}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Foldable/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Apply = require("Control.Apply");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_First = require("Data.Maybe.First");
var Data_Maybe_Last = require("Data.Maybe.Last");
var Data_Monoid = require("Data.Monoid");
var Data_Monoid_Additive = require("Data.Monoid.Additive");
var Data_Monoid_Conj = require("Data.Monoid.Conj");
var Data_Monoid_Disj = require("Data.Monoid.Disj");
var Data_Monoid_Dual = require("Data.Monoid.Dual");
var Data_Monoid_Endo = require("Data.Monoid.Endo");
var Data_Monoid_Multiplicative = require("Data.Monoid.Multiplicative");
var Foldable = function (foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
};
var foldr = function (dict) {
    return dict.foldr;
};
var traverse_ = function (__dict_Applicative_0) {
    return function (__dict_Foldable_1) {
        return function (f) {
            return foldr(__dict_Foldable_1)(function (_109) {
                return Control_Apply["*>"](__dict_Applicative_0["__superclass_Prelude.Apply_0"]())(f(_109));
            })(Prelude.pure(__dict_Applicative_0)(Prelude.unit));
        };
    };
};
var for_ = function (__dict_Applicative_2) {
    return function (__dict_Foldable_3) {
        return Prelude.flip(traverse_(__dict_Applicative_2)(__dict_Foldable_3));
    };
};
var sequence_ = function (__dict_Applicative_4) {
    return function (__dict_Foldable_5) {
        return traverse_(__dict_Applicative_4)(__dict_Foldable_5)(Prelude.id(Prelude.categoryFn));
    };
};
var foldl = function (dict) {
    return dict.foldl;
};
var intercalate = function (__dict_Foldable_6) {
    return function (__dict_Monoid_7) {
        return function (sep) {
            return function (xs) {
                var go = function (_24) {
                    return function (x) {
                        if (_24.init) {
                            return {
                                init: false, 
                                acc: x
                            };
                        };
                        return {
                            init: false, 
                            acc: Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(_24.acc)(Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(sep)(x))
                        };
                    };
                };
                return (foldl(__dict_Foldable_6)(go)({
                    init: true, 
                    acc: Data_Monoid.mempty(__dict_Monoid_7)
                })(xs)).acc;
            };
        };
    };
};
var maximumBy = function (__dict_Foldable_8) {
    return function (cmp) {
        var max$prime = function (_25) {
            return function (_26) {
                if (_25 instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(_26);
                };
                if (_25 instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just((function () {
                        var _35 = cmp(_25.value0)(_26);
                        if (_35 instanceof Prelude.GT) {
                            return _25.value0;
                        };
                        return _26;
                    })());
                };
                throw new Error("Failed pattern match at Data.Foldable line 246, column 3 - line 247, column 3: " + [ _25.constructor.name, _26.constructor.name ]);
            };
        };
        return foldl(__dict_Foldable_8)(max$prime)(Data_Maybe.Nothing.value);
    };
};
var maximum = function (__dict_Ord_9) {
    return function (__dict_Foldable_10) {
        return maximumBy(__dict_Foldable_10)(Prelude.compare(__dict_Ord_9));
    };
};
var mconcat = function (__dict_Foldable_11) {
    return function (__dict_Monoid_12) {
        return foldl(__dict_Foldable_11)(Prelude["<>"](__dict_Monoid_12["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_12));
    };
};
var minimumBy = function (__dict_Foldable_13) {
    return function (cmp) {
        var min$prime = function (_27) {
            return function (_28) {
                if (_27 instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(_28);
                };
                if (_27 instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just((function () {
                        var _39 = cmp(_27.value0)(_28);
                        if (_39 instanceof Prelude.LT) {
                            return _27.value0;
                        };
                        return _28;
                    })());
                };
                throw new Error("Failed pattern match at Data.Foldable line 261, column 3 - line 262, column 3: " + [ _27.constructor.name, _28.constructor.name ]);
            };
        };
        return foldl(__dict_Foldable_13)(min$prime)(Data_Maybe.Nothing.value);
    };
};
var minimum = function (__dict_Ord_14) {
    return function (__dict_Foldable_15) {
        return minimumBy(__dict_Foldable_15)(Prelude.compare(__dict_Ord_14));
    };
};
var product = function (__dict_Foldable_16) {
    return function (__dict_Semiring_17) {
        return foldl(__dict_Foldable_16)(Prelude["*"](__dict_Semiring_17))(Prelude.one(__dict_Semiring_17));
    };
};
var sum = function (__dict_Foldable_18) {
    return function (__dict_Semiring_19) {
        return foldl(__dict_Foldable_18)(Prelude["+"](__dict_Semiring_19))(Prelude.zero(__dict_Semiring_19));
    };
};
var foldableMultiplicative = new Foldable(function (__dict_Monoid_20) {
    return function (f) {
        return function (_23) {
            return f(_23);
        };
    };
}, function (f) {
    return function (z) {
        return function (_22) {
            return f(z)(_22);
        };
    };
}, function (f) {
    return function (z) {
        return function (_21) {
            return f(_21)(z);
        };
    };
});
var foldableMaybe = new Foldable(function (__dict_Monoid_21) {
    return function (f) {
        return function (_2) {
            if (_2 instanceof Data_Maybe.Nothing) {
                return Data_Monoid.mempty(__dict_Monoid_21);
            };
            if (_2 instanceof Data_Maybe.Just) {
                return f(_2.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 103, column 1 - line 111, column 1: " + [ f.constructor.name, _2.constructor.name ]);
        };
    };
}, function (f) {
    return function (z) {
        return function (_1) {
            if (_1 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (_1 instanceof Data_Maybe.Just) {
                return f(z)(_1.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 103, column 1 - line 111, column 1: " + [ f.constructor.name, z.constructor.name, _1.constructor.name ]);
        };
    };
}, function (f) {
    return function (z) {
        return function (_0) {
            if (_0 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (_0 instanceof Data_Maybe.Just) {
                return f(_0.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Foldable line 103, column 1 - line 111, column 1: " + [ f.constructor.name, z.constructor.name, _0.constructor.name ]);
        };
    };
});
var foldableDual = new Foldable(function (__dict_Monoid_22) {
    return function (f) {
        return function (_14) {
            return f(_14);
        };
    };
}, function (f) {
    return function (z) {
        return function (_13) {
            return f(z)(_13);
        };
    };
}, function (f) {
    return function (z) {
        return function (_12) {
            return f(_12)(z);
        };
    };
});
var foldableDisj = new Foldable(function (__dict_Monoid_23) {
    return function (f) {
        return function (_17) {
            return f(_17);
        };
    };
}, function (f) {
    return function (z) {
        return function (_16) {
            return f(z)(_16);
        };
    };
}, function (f) {
    return function (z) {
        return function (_15) {
            return f(_15)(z);
        };
    };
});
var foldableConj = new Foldable(function (__dict_Monoid_24) {
    return function (f) {
        return function (_20) {
            return f(_20);
        };
    };
}, function (f) {
    return function (z) {
        return function (_19) {
            return f(z)(_19);
        };
    };
}, function (f) {
    return function (z) {
        return function (_18) {
            return f(_18)(z);
        };
    };
});
var foldableAdditive = new Foldable(function (__dict_Monoid_25) {
    return function (f) {
        return function (_11) {
            return f(_11);
        };
    };
}, function (f) {
    return function (z) {
        return function (_10) {
            return f(z)(_10);
        };
    };
}, function (f) {
    return function (z) {
        return function (_9) {
            return f(_9)(z);
        };
    };
});
var foldMapDefaultR = function (__dict_Foldable_26) {
    return function (__dict_Monoid_27) {
        return function (f) {
            return function (xs) {
                return foldr(__dict_Foldable_26)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_27["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_27))(xs);
            };
        };
    };
};
var foldableArray = new Foldable(function (__dict_Monoid_28) {
    return foldMapDefaultR(foldableArray)(__dict_Monoid_28);
}, $foreign.foldlArray, $foreign.foldrArray);
var foldMapDefaultL = function (__dict_Foldable_29) {
    return function (__dict_Monoid_30) {
        return function (f) {
            return function (xs) {
                return foldl(__dict_Foldable_29)(function (acc) {
                    return function (x) {
                        return Prelude["<>"](__dict_Monoid_30["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_30))(xs);
            };
        };
    };
};
var foldMap = function (dict) {
    return dict.foldMap;
};
var foldableFirst = new Foldable(function (__dict_Monoid_31) {
    return function (f) {
        return function (_5) {
            return foldMap(foldableMaybe)(__dict_Monoid_31)(f)(_5);
        };
    };
}, function (f) {
    return function (z) {
        return function (_4) {
            return foldl(foldableMaybe)(f)(z)(_4);
        };
    };
}, function (f) {
    return function (z) {
        return function (_3) {
            return foldr(foldableMaybe)(f)(z)(_3);
        };
    };
});
var foldableLast = new Foldable(function (__dict_Monoid_32) {
    return function (f) {
        return function (_8) {
            return foldMap(foldableMaybe)(__dict_Monoid_32)(f)(_8);
        };
    };
}, function (f) {
    return function (z) {
        return function (_7) {
            return foldl(foldableMaybe)(f)(z)(_7);
        };
    };
}, function (f) {
    return function (z) {
        return function (_6) {
            return foldr(foldableMaybe)(f)(z)(_6);
        };
    };
});
var foldlDefault = function (__dict_Foldable_33) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Monoid_Endo.runEndo(Data_Monoid_Dual.runDual(foldMap(__dict_Foldable_33)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function (_110) {
                    return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Prelude.flip(c)(_110)));
                })(xs)))(u);
            };
        };
    };
};
var foldrDefault = function (__dict_Foldable_34) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Monoid_Endo.runEndo(foldMap(__dict_Foldable_34)(Data_Monoid_Endo.monoidEndo)(function (_111) {
                    return Data_Monoid_Endo.Endo(c(_111));
                })(xs))(u);
            };
        };
    };
};
var fold = function (__dict_Foldable_35) {
    return function (__dict_Monoid_36) {
        return foldMap(__dict_Foldable_35)(__dict_Monoid_36)(Prelude.id(Prelude.categoryFn));
    };
};
var find = function (__dict_Foldable_37) {
    return function (p) {
        return foldl(__dict_Foldable_37)(function (r) {
            return function (x) {
                var _108 = p(x);
                if (_108) {
                    return new Data_Maybe.Just(x);
                };
                if (!_108) {
                    return r;
                };
                throw new Error("Failed pattern match at Data.Foldable line 233, column 1 - line 234, column 1: " + [ _108.constructor.name ]);
            };
        })(Data_Maybe.Nothing.value);
    };
};
var any = function (__dict_Foldable_38) {
    return function (__dict_BooleanAlgebra_39) {
        return function (p) {
            return function (_112) {
                return Data_Monoid_Disj.runDisj(foldMap(__dict_Foldable_38)(Data_Monoid_Disj.monoidDisj(__dict_BooleanAlgebra_39))(function (_113) {
                    return Data_Monoid_Disj.Disj(p(_113));
                })(_112));
            };
        };
    };
};
var elem = function (__dict_Foldable_40) {
    return function (__dict_Eq_41) {
        return function (_114) {
            return any(__dict_Foldable_40)(Prelude.booleanAlgebraBoolean)(Prelude["=="](__dict_Eq_41)(_114));
        };
    };
};
var notElem = function (__dict_Foldable_42) {
    return function (__dict_Eq_43) {
        return function (x) {
            return function (_115) {
                return !elem(__dict_Foldable_42)(__dict_Eq_43)(x)(_115);
            };
        };
    };
};
var or = function (__dict_Foldable_44) {
    return function (__dict_BooleanAlgebra_45) {
        return any(__dict_Foldable_44)(__dict_BooleanAlgebra_45)(Prelude.id(Prelude.categoryFn));
    };
};
var all = function (__dict_Foldable_46) {
    return function (__dict_BooleanAlgebra_47) {
        return function (p) {
            return function (_116) {
                return Data_Monoid_Conj.runConj(foldMap(__dict_Foldable_46)(Data_Monoid_Conj.monoidConj(__dict_BooleanAlgebra_47))(function (_117) {
                    return Data_Monoid_Conj.Conj(p(_117));
                })(_116));
            };
        };
    };
};
var and = function (__dict_Foldable_48) {
    return function (__dict_BooleanAlgebra_49) {
        return all(__dict_Foldable_48)(__dict_BooleanAlgebra_49)(Prelude.id(Prelude.categoryFn));
    };
};
module.exports = {
    Foldable: Foldable, 
    minimumBy: minimumBy, 
    minimum: minimum, 
    maximumBy: maximumBy, 
    maximum: maximum, 
    find: find, 
    notElem: notElem, 
    elem: elem, 
    product: product, 
    sum: sum, 
    all: all, 
    any: any, 
    or: or, 
    and: and, 
    intercalate: intercalate, 
    mconcat: mconcat, 
    sequence_: sequence_, 
    for_: for_, 
    traverse_: traverse_, 
    fold: fold, 
    foldMapDefaultR: foldMapDefaultR, 
    foldMapDefaultL: foldMapDefaultL, 
    foldlDefault: foldlDefault, 
    foldrDefault: foldrDefault, 
    foldMap: foldMap, 
    foldl: foldl, 
    foldr: foldr, 
    foldableArray: foldableArray, 
    foldableMaybe: foldableMaybe, 
    foldableFirst: foldableFirst, 
    foldableLast: foldableLast, 
    foldableAdditive: foldableAdditive, 
    foldableDual: foldableDual, 
    foldableDisj: foldableDisj, 
    foldableConj: foldableConj, 
    foldableMultiplicative: foldableMultiplicative
};

},{"./foreign":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Foldable/foreign.js","Control.Apply":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Apply/index.js","Data.Maybe":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Maybe/index.js","Data.Maybe.First":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Maybe.First/index.js","Data.Maybe.Last":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Maybe.Last/index.js","Data.Monoid":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid/index.js","Data.Monoid.Additive":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Additive/index.js","Data.Monoid.Conj":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Conj/index.js","Data.Monoid.Disj":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Disj/index.js","Data.Monoid.Dual":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Dual/index.js","Data.Monoid.Endo":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Endo/index.js","Data.Monoid.Multiplicative":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Multiplicative/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Functor.Invariant/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Invariant = function (imap) {
    this.imap = imap;
};
var imapF = function (__dict_Functor_0) {
    return function (_0) {
        return Prelude["const"](Prelude.map(__dict_Functor_0)(_0));
    };
};
var invariantArray = new Invariant(imapF(Prelude.functorArray));
var invariantFn = new Invariant(imapF(Prelude.functorFn));
var imap = function (dict) {
    return dict.imap;
};
module.exports = {
    Invariant: Invariant, 
    imapF: imapF, 
    imap: imap, 
    invariantFn: invariantFn, 
    invariantArray: invariantArray
};

},{"Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.List/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Lazy = require("Control.Lazy");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Foldable = require("Data.Foldable");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Data_Traversable = require("Data.Traversable");
var Data_Tuple = require("Data.Tuple");
var Data_Unfoldable = require("Data.Unfoldable");
var Nil = (function () {
    function Nil() {

    };
    Nil.value = new Nil();
    return Nil;
})();
var Cons = (function () {
    function Cons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cons.create = function (value0) {
        return function (value1) {
            return new Cons(value0, value1);
        };
    };
    return Cons;
})();
var $colon = Cons.create;
var updateAt = function (_24) {
    return function (x) {
        return function (_25) {
            if (_24 === 0 && _25 instanceof Cons) {
                return new Data_Maybe.Just(new Cons(x, _25.value1));
            };
            if (_25 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(_25.value0))(updateAt(_24 - 1)(x)(_25.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var uncons = function (_17) {
    if (_17 instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (_17 instanceof Cons) {
        return new Data_Maybe.Just({
            head: _17.value0, 
            tail: _17.value1
        });
    };
    throw new Error("Failed pattern match at Data.List line 270, column 1 - line 271, column 1: " + [ _17.constructor.name ]);
};
var toUnfoldable = function (__dict_Unfoldable_2) {
    return Data_Unfoldable.unfoldr(__dict_Unfoldable_2)(function (xs) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(function (rec) {
            return new Data_Tuple.Tuple(rec.head, rec.tail);
        })(uncons(xs));
    });
};
var tail = function (_15) {
    if (_15 instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (_15 instanceof Cons) {
        return new Data_Maybe.Just(_15.value1);
    };
    throw new Error("Failed pattern match at Data.List line 251, column 1 - line 252, column 1: " + [ _15.constructor.name ]);
};
var span = function (p) {
    return function (_32) {
        if (_32 instanceof Cons && p(_32.value0)) {
            var _85 = span(p)(_32.value1);
            return {
                init: new Cons(_32.value0, _85.init), 
                rest: _85.rest
            };
        };
        return {
            init: Nil.value, 
            rest: _32
        };
    };
};
var singleton = function (a) {
    return new Cons(a, Nil.value);
};
var sortBy = function (cmp) {
    var merge = function (_49) {
        return function (_50) {
            if (_49 instanceof Cons && _50 instanceof Cons) {
                if (Prelude["=="](Prelude.eqOrdering)(cmp(_49.value0)(_50.value0))(Prelude.GT.value)) {
                    return new Cons(_50.value0, merge(_49)(_50.value1));
                };
                if (Prelude.otherwise) {
                    return new Cons(_49.value0, merge(_49.value1)(_50));
                };
            };
            if (_49 instanceof Nil) {
                return _50;
            };
            if (_50 instanceof Nil) {
                return _49;
            };
            throw new Error("Failed pattern match at Data.List line 444, column 1 - line 445, column 1: " + [ _49.constructor.name, _50.constructor.name ]);
        };
    };
    var mergePairs = function (_48) {
        if (_48 instanceof Cons && _48.value1 instanceof Cons) {
            return new Cons(merge(_48.value0)(_48.value1.value0), mergePairs(_48.value1.value1));
        };
        return _48;
    };
    var mergeAll = function (__copy__47) {
        var _47 = __copy__47;
        tco: while (true) {
            if (_47 instanceof Cons && _47.value1 instanceof Nil) {
                return _47.value0;
            };
            var __tco__47 = mergePairs(_47);
            _47 = __tco__47;
            continue tco;
        };
    };
    var sequences = function (_44) {
        if (_44 instanceof Cons && _44.value1 instanceof Cons) {
            if (Prelude["=="](Prelude.eqOrdering)(cmp(_44.value0)(_44.value1.value0))(Prelude.GT.value)) {
                return descending(_44.value1.value0)(singleton(_44.value0))(_44.value1.value1);
            };
            if (Prelude.otherwise) {
                return ascending(_44.value1.value0)(Cons.create(_44.value0))(_44.value1.value1);
            };
        };
        return singleton(_44);
    };
    var descending = function (__copy_a) {
        return function (__copy_as) {
            return function (__copy__45) {
                var a = __copy_a;
                var as = __copy_as;
                var _45 = __copy__45;
                tco: while (true) {
                    var a_1 = a;
                    var as_1 = as;
                    if (_45 instanceof Cons && Prelude["=="](Prelude.eqOrdering)(cmp(a_1)(_45.value0))(Prelude.GT.value)) {
                        var __tco_a = _45.value0;
                        var __tco_as = new Cons(a_1, as_1);
                        var __tco__45 = _45.value1;
                        a = __tco_a;
                        as = __tco_as;
                        _45 = __tco__45;
                        continue tco;
                    };
                    return new Cons(new Cons(a, as), sequences(_45));
                };
            };
        };
    };
    var ascending = function (a) {
        return function (as) {
            return function (_46) {
                if (_46 instanceof Cons && Prelude["/="](Prelude.eqOrdering)(cmp(a)(_46.value0))(Prelude.GT.value)) {
                    return ascending(_46.value0)(function (ys) {
                        return as(new Cons(a, ys));
                    })(_46.value1);
                };
                return new Cons(as(singleton(a)), sequences(_46));
            };
        };
    };
    return function (_316) {
        return mergeAll(sequences(_316));
    };
};
var sort = function (__dict_Ord_3) {
    return function (xs) {
        return sortBy(Prelude.compare(__dict_Ord_3))(xs);
    };
};
var showList = function (__dict_Show_4) {
    return new Prelude.Show(function (_57) {
        if (_57 instanceof Nil) {
            return "Nil";
        };
        if (_57 instanceof Cons) {
            return "Cons (" + (Prelude.show(__dict_Show_4)(_57.value0) + (") (" + (Prelude.show(showList(__dict_Show_4))(_57.value1) + ")")));
        };
        throw new Error("Failed pattern match: " + [ _57.constructor.name ]);
    });
};
var semigroupList = new Prelude.Semigroup(function (_63) {
    return function (ys) {
        if (_63 instanceof Nil) {
            return ys;
        };
        if (_63 instanceof Cons) {
            return new Cons(_63.value0, Prelude["<>"](semigroupList)(_63.value1)(ys));
        };
        throw new Error("Failed pattern match: " + [ _63.constructor.name, ys.constructor.name ]);
    };
});
var reverse = (function () {
    var go = function (__copy_acc) {
        return function (__copy__41) {
            var acc = __copy_acc;
            var _41 = __copy__41;
            tco: while (true) {
                var acc_1 = acc;
                if (_41 instanceof Nil) {
                    return acc_1;
                };
                if (_41 instanceof Cons) {
                    var __tco_acc = new Cons(_41.value0, acc);
                    var __tco__41 = _41.value1;
                    acc = __tco_acc;
                    _41 = __tco__41;
                    continue tco;
                };
                throw new Error("Failed pattern match at Data.List line 368, column 1 - line 369, column 1: " + [ acc.constructor.name, _41.constructor.name ]);
            };
        };
    };
    return go(Nil.value);
})();
var snoc = function (xs) {
    return function (x) {
        return reverse(new Cons(x, reverse(xs)));
    };
};
var take = (function () {
    var go = function (__copy_acc) {
        return function (__copy__51) {
            return function (__copy__52) {
                var acc = __copy_acc;
                var _51 = __copy__51;
                var _52 = __copy__52;
                tco: while (true) {
                    var acc_1 = acc;
                    if (_51 === 0) {
                        return reverse(acc_1);
                    };
                    var acc_1 = acc;
                    if (_52 instanceof Nil) {
                        return reverse(acc_1);
                    };
                    if (_52 instanceof Cons) {
                        var __tco_acc = new Cons(_52.value0, acc);
                        var __tco__51 = _51 - 1;
                        var __tco__52 = _52.value1;
                        acc = __tco_acc;
                        _51 = __tco__51;
                        _52 = __tco__52;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 490, column 1 - line 491, column 1: " + [ acc.constructor.name, _51.constructor.name, _52.constructor.name ]);
                };
            };
        };
    };
    return go(Nil.value);
})();
var takeWhile = function (p) {
    var go = function (__copy_acc) {
        return function (__copy__53) {
            var acc = __copy_acc;
            var _53 = __copy__53;
            tco: while (true) {
                var acc_1 = acc;
                if (_53 instanceof Cons && p(_53.value0)) {
                    var __tco_acc = new Cons(_53.value0, acc_1);
                    var __tco__53 = _53.value1;
                    acc = __tco_acc;
                    _53 = __tco__53;
                    continue tco;
                };
                return reverse(acc);
            };
        };
    };
    return go(Nil.value);
};
var unfoldableList = new Data_Unfoldable.Unfoldable(function (f) {
    return function (b) {
        var go = function (__copy_source) {
            return function (__copy_memo) {
                var source = __copy_source;
                var memo = __copy_memo;
                tco: while (true) {
                    var _139 = f(source);
                    if (_139 instanceof Data_Maybe.Nothing) {
                        return reverse(memo);
                    };
                    if (_139 instanceof Data_Maybe.Just) {
                        var __tco_memo = new Cons(_139.value0.value0, memo);
                        source = _139.value0.value1;
                        memo = __tco_memo;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 748, column 1 - line 755, column 1: " + [ _139.constructor.name ]);
                };
            };
        };
        return go(b)(Nil.value);
    };
});
var zipWith = function (f) {
    return function (xs) {
        return function (ys) {
            var go = function (__copy__55) {
                return function (__copy__56) {
                    return function (__copy_acc) {
                        var _55 = __copy__55;
                        var _56 = __copy__56;
                        var acc = __copy_acc;
                        tco: while (true) {
                            if (_55 instanceof Nil) {
                                return acc;
                            };
                            if (_56 instanceof Nil) {
                                return acc;
                            };
                            if (_55 instanceof Cons && _56 instanceof Cons) {
                                var __tco__55 = _55.value1;
                                var __tco__56 = _56.value1;
                                var __tco_acc = new Cons(f(_55.value0)(_56.value0), acc);
                                _55 = __tco__55;
                                _56 = __tco__56;
                                acc = __tco_acc;
                                continue tco;
                            };
                            throw new Error("Failed pattern match at Data.List line 654, column 1 - line 655, column 1: " + [ _55.constructor.name, _56.constructor.name, acc.constructor.name ]);
                        };
                    };
                };
            };
            return reverse(go(xs)(ys)(Nil.value));
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var replicateM = function (__dict_Monad_6) {
    return function (n) {
        return function (m) {
            if (n < 1) {
                return Prelude["return"](__dict_Monad_6["__superclass_Prelude.Applicative_0"]())(Nil.value);
            };
            if (Prelude.otherwise) {
                return Prelude.bind(__dict_Monad_6["__superclass_Prelude.Bind_1"]())(m)(function (_4) {
                    return Prelude.bind(__dict_Monad_6["__superclass_Prelude.Bind_1"]())(replicateM(__dict_Monad_6)(n - 1)(m))(function (_3) {
                        return Prelude["return"](__dict_Monad_6["__superclass_Prelude.Applicative_0"]())(new Cons(_4, _3));
                    });
                });
            };
            throw new Error("Failed pattern match: " + [ n.constructor.name, m.constructor.name ]);
        };
    };
};
var replicate = function (n) {
    return function (value) {
        var go = function (__copy_n_1) {
            return function (__copy_rest) {
                var n_1 = __copy_n_1;
                var rest = __copy_rest;
                tco: while (true) {
                    if (n_1 <= 0) {
                        return rest;
                    };
                    if (Prelude.otherwise) {
                        var __tco_n_1 = n_1 - 1;
                        var __tco_rest = new Cons(value, rest);
                        n_1 = __tco_n_1;
                        rest = __tco_rest;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 148, column 1 - line 149, column 1: " + [ n_1.constructor.name, rest.constructor.name ]);
                };
            };
        };
        return go(n)(Nil.value);
    };
};
var range = function (start) {
    return function (end) {
        if (start === end) {
            return singleton(start);
        };
        if (Prelude.otherwise) {
            var go = function (__copy_s) {
                return function (__copy_e) {
                    return function (__copy_step) {
                        return function (__copy_rest) {
                            var s = __copy_s;
                            var e = __copy_e;
                            var step = __copy_step;
                            var rest = __copy_rest;
                            tco: while (true) {
                                if (s === e) {
                                    return new Cons(s, rest);
                                };
                                if (Prelude.otherwise) {
                                    var __tco_s = s + step | 0;
                                    var __tco_e = e;
                                    var __tco_step = step;
                                    var __tco_rest = new Cons(s, rest);
                                    s = __tco_s;
                                    e = __tco_e;
                                    step = __tco_step;
                                    rest = __tco_rest;
                                    continue tco;
                                };
                                throw new Error("Failed pattern match at Data.List line 140, column 1 - line 141, column 1: " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
                            };
                        };
                    };
                };
            };
            return go(end)(start)((function () {
                var _162 = start > end;
                if (_162) {
                    return 1;
                };
                if (!_162) {
                    return -1;
                };
                throw new Error("Failed pattern match at Data.List line 140, column 1 - line 141, column 1: " + [ _162.constructor.name ]);
            })())(Nil.value);
        };
        throw new Error("Failed pattern match at Data.List line 140, column 1 - line 141, column 1: " + [ start.constructor.name, end.constructor.name ]);
    };
};
var $dot$dot = range;
var $$null = function (_11) {
    if (_11 instanceof Nil) {
        return true;
    };
    return false;
};
var monoidList = new Data_Monoid.Monoid(function () {
    return semigroupList;
}, Nil.value);
var mapMaybe = function (f) {
    var go = function (__copy_acc) {
        return function (__copy__43) {
            var acc = __copy_acc;
            var _43 = __copy__43;
            tco: while (true) {
                var acc_1 = acc;
                if (_43 instanceof Nil) {
                    return reverse(acc_1);
                };
                if (_43 instanceof Cons) {
                    var _166 = f(_43.value0);
                    if (_166 instanceof Data_Maybe.Nothing) {
                        var __tco_acc = acc;
                        var __tco__43 = _43.value1;
                        acc = __tco_acc;
                        _43 = __tco__43;
                        continue tco;
                    };
                    if (_166 instanceof Data_Maybe.Just) {
                        var __tco_acc = new Cons(_166.value0, acc);
                        var __tco__43 = _43.value1;
                        acc = __tco_acc;
                        _43 = __tco__43;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 420, column 1 - line 421, column 1: " + [ _166.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.List line 420, column 1 - line 421, column 1: " + [ acc.constructor.name, _43.constructor.name ]);
            };
        };
    };
    return go(Nil.value);
};
var some = function (__dict_Alternative_8) {
    return function (__dict_Lazy_9) {
        return function (v) {
            return Prelude["<*>"]((__dict_Alternative_8["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_8["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(v))(Control_Lazy.defer(__dict_Lazy_9)(function (_7) {
                return many(__dict_Alternative_8)(__dict_Lazy_9)(v);
            }));
        };
    };
};
var many = function (__dict_Alternative_10) {
    return function (__dict_Lazy_11) {
        return function (v) {
            return Control_Alt["<|>"]((__dict_Alternative_10["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_10)(__dict_Lazy_11)(v))(Prelude.pure(__dict_Alternative_10["__superclass_Prelude.Applicative_0"]())(Nil.value));
        };
    };
};
var last = function (__copy__14) {
    var _14 = __copy__14;
    tco: while (true) {
        if (_14 instanceof Cons && _14.value1 instanceof Nil) {
            return new Data_Maybe.Just(_14.value0);
        };
        if (_14 instanceof Cons) {
            var __tco__14 = _14.value1;
            _14 = __tco__14;
            continue tco;
        };
        return Data_Maybe.Nothing.value;
    };
};
var insertBy = function (cmp) {
    return function (x) {
        return function (_12) {
            if (_12 instanceof Nil) {
                return new Cons(x, Nil.value);
            };
            if (_12 instanceof Cons) {
                var _179 = cmp(x)(_12.value0);
                if (_179 instanceof Prelude.GT) {
                    return new Cons(_12.value0, insertBy(cmp)(x)(_12.value1));
                };
                return new Cons(x, _12);
            };
            throw new Error("Failed pattern match: " + [ cmp.constructor.name, x.constructor.name, _12.constructor.name ]);
        };
    };
};
var insertAt = function (_20) {
    return function (x) {
        return function (_21) {
            if (_20 === 0) {
                return new Data_Maybe.Just(new Cons(x, _21));
            };
            if (_21 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(_21.value0))(insertAt(_20 - 1)(x)(_21.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var insert = function (__dict_Ord_12) {
    return insertBy(Prelude.compare(__dict_Ord_12));
};
var init = function (_16) {
    if (_16 instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    var go = function (__copy__39) {
        return function (__copy_acc) {
            var _39 = __copy__39;
            var acc = __copy_acc;
            tco: while (true) {
                if (_39 instanceof Cons && _39.value1 instanceof Nil) {
                    return acc;
                };
                if (_39 instanceof Cons) {
                    var __tco__39 = _39.value1;
                    var __tco_acc = new Cons(_39.value0, acc);
                    _39 = __tco__39;
                    acc = __tco_acc;
                    continue tco;
                };
                return acc;
            };
        };
    };
    return Data_Maybe.Just.create(reverse(go(_16)(Nil.value)));
};
var index = function (__copy__18) {
    return function (__copy__19) {
        var _18 = __copy__18;
        var _19 = __copy__19;
        tco: while (true) {
            if (_18 instanceof Nil) {
                return Data_Maybe.Nothing.value;
            };
            if (_18 instanceof Cons && _19 === 0) {
                return new Data_Maybe.Just(_18.value0);
            };
            if (_18 instanceof Cons) {
                var __tco__18 = _18.value1;
                var __tco__19 = _19 - 1;
                _18 = __tco__18;
                _19 = __tco__19;
                continue tco;
            };
            throw new Error("Failed pattern match: " + [ _18.constructor.name, _19.constructor.name ]);
        };
    };
};
var $bang$bang = index;
var head = function (_13) {
    if (_13 instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (_13 instanceof Cons) {
        return new Data_Maybe.Just(_13.value0);
    };
    throw new Error("Failed pattern match at Data.List line 236, column 1 - line 237, column 1: " + [ _13.constructor.name ]);
};
var groupBy = function (eq) {
    return function (_33) {
        if (_33 instanceof Nil) {
            return Nil.value;
        };
        if (_33 instanceof Cons) {
            var _205 = span(eq(_33.value0))(_33.value1);
            return new Cons(new Cons(_33.value0, _205.init), groupBy(eq)(_205.rest));
        };
        throw new Error("Failed pattern match: " + [ eq.constructor.name, _33.constructor.name ]);
    };
};
var group = function (__dict_Eq_13) {
    return groupBy(Prelude["=="](__dict_Eq_13));
};
var group$prime = function (__dict_Ord_14) {
    return function (_317) {
        return group(__dict_Ord_14["__superclass_Prelude.Eq_0"]())(sort(__dict_Ord_14)(_317));
    };
};
var functorList = new Prelude.Functor(function (f) {
    return function (lst) {
        var go = function (__copy__64) {
            return function (__copy_acc) {
                var _64 = __copy__64;
                var acc = __copy_acc;
                tco: while (true) {
                    if (_64 instanceof Nil) {
                        return acc;
                    };
                    if (_64 instanceof Cons) {
                        var __tco__64 = _64.value1;
                        var __tco_acc = new Cons(f(_64.value0), acc);
                        _64 = __tco__64;
                        acc = __tco_acc;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 731, column 1 - line 738, column 1: " + [ _64.constructor.name, acc.constructor.name ]);
                };
            };
        };
        return reverse(go(lst)(Nil.value));
    };
});
var fromList = function (__dict_Unfoldable_15) {
    return toUnfoldable(__dict_Unfoldable_15);
};
var fromFoldable = function (__dict_Foldable_16) {
    return Data_Foldable.foldr(__dict_Foldable_16)(Cons.create)(Nil.value);
};
var toList = function (__dict_Foldable_17) {
    return fromFoldable(__dict_Foldable_17);
};
var foldableList = new Data_Foldable.Foldable(function (__dict_Monoid_18) {
    return function (f) {
        return Data_Foldable.foldl(foldableList)(function (acc) {
            return function (_318) {
                return Prelude.append(__dict_Monoid_18["__superclass_Prelude.Semigroup_0"]())(acc)(f(_318));
            };
        })(Data_Monoid.mempty(__dict_Monoid_18));
    };
}, (function () {
    var go = function (__copy_o) {
        return function (__copy_b) {
            return function (__copy__66) {
                var o = __copy_o;
                var b = __copy_b;
                var _66 = __copy__66;
                tco: while (true) {
                    var b_1 = b;
                    if (_66 instanceof Nil) {
                        return b_1;
                    };
                    if (_66 instanceof Cons) {
                        var __tco_o = o;
                        var __tco_b = o(b)(_66.value0);
                        var __tco__66 = _66.value1;
                        o = __tco_o;
                        b = __tco_b;
                        _66 = __tco__66;
                        continue tco;
                    };
                    throw new Error("Failed pattern match: " + [ o.constructor.name, b.constructor.name, _66.constructor.name ]);
                };
            };
        };
    };
    return go;
})(), function (o) {
    return function (b) {
        return function (_65) {
            if (_65 instanceof Nil) {
                return b;
            };
            if (_65 instanceof Cons) {
                return o(_65.value0)(Data_Foldable.foldr(foldableList)(o)(b)(_65.value1));
            };
            throw new Error("Failed pattern match: " + [ o.constructor.name, b.constructor.name, _65.constructor.name ]);
        };
    };
});
var length = Data_Foldable.foldl(foldableList)(function (acc) {
    return function (_8) {
        return acc + 1 | 0;
    };
})(0);
var traversableList = new Data_Traversable.Traversable(function () {
    return foldableList;
}, function () {
    return functorList;
}, function (__dict_Applicative_1) {
    return function (_68) {
        if (_68 instanceof Nil) {
            return Prelude.pure(__dict_Applicative_1)(Nil.value);
        };
        if (_68 instanceof Cons) {
            return Prelude["<*>"](__dict_Applicative_1["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(_68.value0))(Data_Traversable.sequence(traversableList)(__dict_Applicative_1)(_68.value1));
        };
        throw new Error("Failed pattern match: " + [ _68.constructor.name ]);
    };
}, function (__dict_Applicative_0) {
    return function (f) {
        return function (_67) {
            if (_67 instanceof Nil) {
                return Prelude.pure(__dict_Applicative_0)(Nil.value);
            };
            if (_67 instanceof Cons) {
                return Prelude["<*>"](__dict_Applicative_0["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(f(_67.value0)))(Data_Traversable.traverse(traversableList)(__dict_Applicative_0)(f)(_67.value1));
            };
            throw new Error("Failed pattern match: " + [ f.constructor.name, _67.constructor.name ]);
        };
    };
});
var zipWithA = function (__dict_Applicative_5) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(traversableList)(__dict_Applicative_5)(zipWith(f)(xs)(ys));
            };
        };
    };
};
var unzip = Data_Foldable.foldr(foldableList)(function (_10) {
    return function (_9) {
        return new Data_Tuple.Tuple(new Cons(_10.value0, _9.value0), new Cons(_10.value1, _9.value1));
    };
})(new Data_Tuple.Tuple(Nil.value, Nil.value));
var foldM = function (__dict_Monad_19) {
    return function (f) {
        return function (a) {
            return function (_38) {
                if (_38 instanceof Nil) {
                    return Prelude["return"](__dict_Monad_19["__superclass_Prelude.Applicative_0"]())(a);
                };
                if (_38 instanceof Cons) {
                    return Prelude[">>="](__dict_Monad_19["__superclass_Prelude.Bind_1"]())(f(a)(_38.value0))(function (a$prime) {
                        return foldM(__dict_Monad_19)(f)(a$prime)(_38.value1);
                    });
                };
                throw new Error("Failed pattern match: " + [ f.constructor.name, a.constructor.name, _38.constructor.name ]);
            };
        };
    };
};
var findIndex = function (fn) {
    var go = function (__copy_n) {
        return function (__copy__40) {
            var n = __copy_n;
            var _40 = __copy__40;
            tco: while (true) {
                if (_40 instanceof Cons) {
                    if (fn(_40.value0)) {
                        return new Data_Maybe.Just(n);
                    };
                    if (Prelude.otherwise) {
                        var __tco_n = n + 1 | 0;
                        var __tco__40 = _40.value1;
                        n = __tco_n;
                        _40 = __tco__40;
                        continue tco;
                    };
                };
                if (_40 instanceof Nil) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.List line 301, column 1 - line 302, column 1: " + [ n.constructor.name, _40.constructor.name ]);
            };
        };
    };
    return go(0);
};
var findLastIndex = function (fn) {
    return function (xs) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["-"](Prelude.ringInt)(length(xs) - 1))(findIndex(fn)(reverse(xs)));
    };
};
var filterM = function (__dict_Monad_20) {
    return function (p) {
        return function (_29) {
            if (_29 instanceof Nil) {
                return Prelude["return"](__dict_Monad_20["__superclass_Prelude.Applicative_0"]())(Nil.value);
            };
            if (_29 instanceof Cons) {
                return Prelude.bind(__dict_Monad_20["__superclass_Prelude.Bind_1"]())(p(_29.value0))(function (_6) {
                    return Prelude.bind(__dict_Monad_20["__superclass_Prelude.Bind_1"]())(filterM(__dict_Monad_20)(p)(_29.value1))(function (_5) {
                        return Prelude["return"](__dict_Monad_20["__superclass_Prelude.Applicative_0"]())((function () {
                            if (_6) {
                                return new Cons(_29.value0, _5);
                            };
                            if (!_6) {
                                return _5;
                            };
                            throw new Error("Failed pattern match: " + [ _6.constructor.name ]);
                        })());
                    });
                });
            };
            throw new Error("Failed pattern match: " + [ p.constructor.name, _29.constructor.name ]);
        };
    };
};
var filter = function (p) {
    var go = function (__copy_acc) {
        return function (__copy__42) {
            var acc = __copy_acc;
            var _42 = __copy__42;
            tco: while (true) {
                var acc_1 = acc;
                if (_42 instanceof Nil) {
                    return reverse(acc_1);
                };
                if (_42 instanceof Cons) {
                    if (p(_42.value0)) {
                        var __tco_acc = new Cons(_42.value0, acc);
                        var __tco__42 = _42.value1;
                        acc = __tco_acc;
                        _42 = __tco__42;
                        continue tco;
                    };
                    if (Prelude.otherwise) {
                        var __tco_acc = acc;
                        var __tco__42 = _42.value1;
                        acc = __tco_acc;
                        _42 = __tco__42;
                        continue tco;
                    };
                };
                throw new Error("Failed pattern match at Data.List line 391, column 1 - line 392, column 1: " + [ acc.constructor.name, _42.constructor.name ]);
            };
        };
    };
    return go(Nil.value);
};
var intersectBy = function (eq) {
    return function (_36) {
        return function (_37) {
            if (_36 instanceof Nil) {
                return Nil.value;
            };
            if (_37 instanceof Nil) {
                return Nil.value;
            };
            return filter(function (x) {
                return Data_Foldable.any(foldableList)(Prelude.booleanAlgebraBoolean)(eq(x))(_37);
            })(_36);
        };
    };
};
var intersect = function (__dict_Eq_21) {
    return intersectBy(Prelude["=="](__dict_Eq_21));
};
var nubBy = function ($eq$eq) {
    return function (_34) {
        if (_34 instanceof Nil) {
            return Nil.value;
        };
        if (_34 instanceof Cons) {
            return new Cons(_34.value0, nubBy($eq$eq)(filter(function (y) {
                return !$eq$eq(_34.value0)(y);
            })(_34.value1)));
        };
        throw new Error("Failed pattern match: " + [ $eq$eq.constructor.name, _34.constructor.name ]);
    };
};
var nub = function (__dict_Eq_22) {
    return nubBy(Prelude.eq(__dict_Eq_22));
};
var eqList = function (__dict_Eq_23) {
    return new Prelude.Eq(function (xs) {
        return function (ys) {
            var go = function (__copy__58) {
                return function (__copy__59) {
                    return function (__copy__60) {
                        var _58 = __copy__58;
                        var _59 = __copy__59;
                        var _60 = __copy__60;
                        tco: while (true) {
                            if (!_60) {
                                return false;
                            };
                            if (_58 instanceof Nil && _59 instanceof Nil) {
                                return _60;
                            };
                            if (_58 instanceof Cons && _59 instanceof Cons) {
                                var __tco__58 = _58.value1;
                                var __tco__59 = _59.value1;
                                var __tco__60 = _60 && Prelude["=="](__dict_Eq_23)(_59.value0)(_58.value0);
                                _58 = __tco__58;
                                _59 = __tco__59;
                                _60 = __tco__60;
                                continue tco;
                            };
                            return false;
                        };
                    };
                };
            };
            return go(xs)(ys)(true);
        };
    });
};
var ordList = function (__dict_Ord_7) {
    return new Prelude.Ord(function () {
        return eqList(__dict_Ord_7["__superclass_Prelude.Eq_0"]());
    }, function (xs) {
        return function (ys) {
            var go = function (__copy__61) {
                return function (__copy__62) {
                    var _61 = __copy__61;
                    var _62 = __copy__62;
                    tco: while (true) {
                        if (_61 instanceof Nil && _62 instanceof Nil) {
                            return Prelude.EQ.value;
                        };
                        if (_61 instanceof Nil) {
                            return Prelude.LT.value;
                        };
                        if (_62 instanceof Nil) {
                            return Prelude.GT.value;
                        };
                        if (_61 instanceof Cons && _62 instanceof Cons) {
                            var _274 = Prelude.compare(__dict_Ord_7)(_61.value0)(_62.value0);
                            if (_274 instanceof Prelude.EQ) {
                                var __tco__61 = _61.value1;
                                var __tco__62 = _62.value1;
                                _61 = __tco__61;
                                _62 = __tco__62;
                                continue tco;
                            };
                            return _274;
                        };
                        throw new Error("Failed pattern match at Data.List line 713, column 1 - line 724, column 1: " + [ _61.constructor.name, _62.constructor.name ]);
                    };
                };
            };
            return go(xs)(ys);
        };
    });
};
var elemLastIndex = function (__dict_Eq_24) {
    return function (x) {
        return findLastIndex(function (_1) {
            return Prelude["=="](__dict_Eq_24)(_1)(x);
        });
    };
};
var elemIndex = function (__dict_Eq_25) {
    return function (x) {
        return findIndex(function (_0) {
            return Prelude["=="](__dict_Eq_25)(_0)(x);
        });
    };
};
var dropWhile = function (p) {
    var go = function (__copy__54) {
        var _54 = __copy__54;
        tco: while (true) {
            if (_54 instanceof Cons && p(_54.value0)) {
                var __tco__54 = _54.value1;
                _54 = __tco__54;
                continue tco;
            };
            return _54;
        };
    };
    return go;
};
var drop = function (__copy__30) {
    return function (__copy__31) {
        var _30 = __copy__30;
        var _31 = __copy__31;
        tco: while (true) {
            if (_30 === 0) {
                return _31;
            };
            if (_31 instanceof Nil) {
                return Nil.value;
            };
            if (_31 instanceof Cons) {
                var __tco__30 = _30 - 1;
                var __tco__31 = _31.value1;
                _30 = __tco__30;
                _31 = __tco__31;
                continue tco;
            };
            throw new Error("Failed pattern match: " + [ _30.constructor.name, _31.constructor.name ]);
        };
    };
};
var slice = function (start) {
    return function (end) {
        return function (xs) {
            return take(end - start)(drop(start)(xs));
        };
    };
};
var deleteBy = function ($eq$eq) {
    return function (x) {
        return function (_35) {
            if (_35 instanceof Nil) {
                return Nil.value;
            };
            if (_35 instanceof Cons && $eq$eq(x)(_35.value0)) {
                return _35.value1;
            };
            if (_35 instanceof Cons) {
                return new Cons(_35.value0, deleteBy($eq$eq)(x)(_35.value1));
            };
            throw new Error("Failed pattern match: " + [ $eq$eq.constructor.name, x.constructor.name, _35.constructor.name ]);
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Prelude["<>"](semigroupList)(xs)(Data_Foldable.foldl(foldableList)(Prelude.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (__dict_Eq_26) {
    return unionBy(Prelude["=="](__dict_Eq_26));
};
var deleteAt = function (_22) {
    return function (_23) {
        if (_22 === 0 && _23 instanceof Cons) {
            return new Data_Maybe.Just(_23.value1);
        };
        if (_23 instanceof Cons) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(_23.value0))(deleteAt(_22 - 1)(_23.value1));
        };
        return Data_Maybe.Nothing.value;
    };
};
var $$delete = function (__dict_Eq_27) {
    return deleteBy(Prelude["=="](__dict_Eq_27));
};
var $bslash$bslash = function (__dict_Eq_28) {
    return Data_Foldable.foldl(foldableList)(Prelude.flip($$delete(__dict_Eq_28)));
};
var concatMap = function (f) {
    return function (_28) {
        if (_28 instanceof Nil) {
            return Nil.value;
        };
        if (_28 instanceof Cons) {
            return Prelude["<>"](semigroupList)(f(_28.value0))(concatMap(f)(_28.value1));
        };
        throw new Error("Failed pattern match: " + [ f.constructor.name, _28.constructor.name ]);
    };
};
var catMaybes = mapMaybe(Prelude.id(Prelude.categoryFn));
var applyList = new Prelude.Apply(function () {
    return functorList;
}, function (_69) {
    return function (xs) {
        if (_69 instanceof Nil) {
            return Nil.value;
        };
        if (_69 instanceof Cons) {
            return Prelude["<>"](semigroupList)(Prelude["<$>"](functorList)(_69.value0)(xs))(Prelude["<*>"](applyList)(_69.value1)(xs));
        };
        throw new Error("Failed pattern match: " + [ _69.constructor.name, xs.constructor.name ]);
    };
});
var bindList = new Prelude.Bind(function () {
    return applyList;
}, Prelude.flip(concatMap));
var concat = function (_2) {
    return Prelude[">>="](bindList)(_2)(Prelude.id(Prelude.categoryFn));
};
var applicativeList = new Prelude.Applicative(function () {
    return applyList;
}, function (a) {
    return new Cons(a, Nil.value);
});
var monadList = new Prelude.Monad(function () {
    return applicativeList;
}, function () {
    return bindList;
});
var alterAt = function (_26) {
    return function (f) {
        return function (_27) {
            if (_26 === 0 && _27 instanceof Cons) {
                return Data_Maybe.Just.create((function () {
                    var _310 = f(_27.value0);
                    if (_310 instanceof Data_Maybe.Nothing) {
                        return _27.value1;
                    };
                    if (_310 instanceof Data_Maybe.Just) {
                        return new Cons(_310.value0, _27.value1);
                    };
                    throw new Error("Failed pattern match: " + [ _310.constructor.name ]);
                })());
            };
            if (_27 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(_27.value0))(alterAt(_26 - 1)(f)(_27.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var modifyAt = function (n) {
    return function (f) {
        return alterAt(n)(function (_319) {
            return Data_Maybe.Just.create(f(_319));
        });
    };
};
var altList = new Control_Alt.Alt(function () {
    return functorList;
}, Prelude.append(semigroupList));
var plusList = new Control_Plus.Plus(function () {
    return altList;
}, Nil.value);
var alternativeList = new Control_Alternative.Alternative(function () {
    return plusList;
}, function () {
    return applicativeList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
    return alternativeList;
}, function () {
    return monadList;
});
module.exports = {
    Nil: Nil, 
    Cons: Cons, 
    fromList: fromList, 
    toList: toList, 
    foldM: foldM, 
    unzip: unzip, 
    zip: zip, 
    zipWithA: zipWithA, 
    zipWith: zipWith, 
    intersectBy: intersectBy, 
    intersect: intersect, 
    "\\\\": $bslash$bslash, 
    deleteBy: deleteBy, 
    "delete": $$delete, 
    unionBy: unionBy, 
    union: union, 
    nubBy: nubBy, 
    nub: nub, 
    groupBy: groupBy, 
    "group'": group$prime, 
    group: group, 
    span: span, 
    dropWhile: dropWhile, 
    drop: drop, 
    takeWhile: takeWhile, 
    take: take, 
    slice: slice, 
    sortBy: sortBy, 
    sort: sort, 
    catMaybes: catMaybes, 
    mapMaybe: mapMaybe, 
    filterM: filterM, 
    filter: filter, 
    concatMap: concatMap, 
    concat: concat, 
    reverse: reverse, 
    alterAt: alterAt, 
    modifyAt: modifyAt, 
    updateAt: updateAt, 
    deleteAt: deleteAt, 
    insertAt: insertAt, 
    findLastIndex: findLastIndex, 
    findIndex: findIndex, 
    elemLastIndex: elemLastIndex, 
    elemIndex: elemIndex, 
    index: index, 
    "!!": $bang$bang, 
    uncons: uncons, 
    init: init, 
    tail: tail, 
    last: last, 
    head: head, 
    insertBy: insertBy, 
    insert: insert, 
    snoc: snoc, 
    ":": $colon, 
    length: length, 
    "null": $$null, 
    many: many, 
    some: some, 
    replicateM: replicateM, 
    replicate: replicate, 
    range: range, 
    "..": $dot$dot, 
    singleton: singleton, 
    fromFoldable: fromFoldable, 
    toUnfoldable: toUnfoldable, 
    showList: showList, 
    eqList: eqList, 
    ordList: ordList, 
    semigroupList: semigroupList, 
    monoidList: monoidList, 
    functorList: functorList, 
    foldableList: foldableList, 
    unfoldableList: unfoldableList, 
    traversableList: traversableList, 
    applyList: applyList, 
    applicativeList: applicativeList, 
    bindList: bindList, 
    monadList: monadList, 
    altList: altList, 
    plusList: plusList, 
    alternativeList: alternativeList, 
    monadPlusList: monadPlusList
};

},{"Control.Alt":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Alt/index.js","Control.Alternative":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Alternative/index.js","Control.Lazy":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Lazy/index.js","Control.MonadPlus":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.MonadPlus/index.js","Control.Plus":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Plus/index.js","Data.Foldable":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Foldable/index.js","Data.Maybe":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Maybe/index.js","Data.Monoid":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid/index.js","Data.Traversable":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Traversable/index.js","Data.Tuple":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Tuple/index.js","Data.Unfoldable":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Unfoldable/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Maybe.First/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var First = function (x) {
    return x;
};
var showFirst = function (__dict_Show_0) {
    return new Prelude.Show(function (_10) {
        return "First (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_0))(_10) + ")");
    });
};
var semigroupFirst = new Prelude.Semigroup(function (_11) {
    return function (second) {
        if (_11 instanceof Data_Maybe.Just) {
            return _11;
        };
        return second;
    };
});
var runFirst = function (_0) {
    return _0;
};
var monoidFirst = new Data_Monoid.Monoid(function () {
    return semigroupFirst;
}, Data_Maybe.Nothing.value);
var functorFirst = new Prelude.Functor(function (f) {
    return function (_5) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(f)(_5);
    };
});
var invariantFirst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorFirst));
var extendFirst = new Control_Extend.Extend(function () {
    return functorFirst;
}, function (f) {
    return function (_9) {
        return Control_Extend.extend(Data_Maybe.extendMaybe)(function (_29) {
            return f(First(_29));
        })(_9);
    };
});
var eqFirst = function (__dict_Eq_2) {
    return new Prelude.Eq(function (_1) {
        return function (_2) {
            return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_2))(_1)(_2);
        };
    });
};
var ordFirst = function (__dict_Ord_1) {
    return new Prelude.Ord(function () {
        return eqFirst(__dict_Ord_1["__superclass_Prelude.Eq_0"]());
    }, function (_3) {
        return function (_4) {
            return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_1))(_3)(_4);
        };
    });
};
var boundedFirst = function (__dict_Bounded_3) {
    return new Prelude.Bounded(Prelude.bottom(Data_Maybe.boundedMaybe(__dict_Bounded_3)), Prelude.top(Data_Maybe.boundedMaybe(__dict_Bounded_3)));
};
var applyFirst = new Prelude.Apply(function () {
    return functorFirst;
}, function (_6) {
    return function (_7) {
        return Prelude["<*>"](Data_Maybe.applyMaybe)(_6)(_7);
    };
});
var bindFirst = new Prelude.Bind(function () {
    return applyFirst;
}, function (_8) {
    return function (f) {
        return Prelude.bind(Data_Maybe.bindMaybe)(_8)(function (_30) {
            return runFirst(f(_30));
        });
    };
});
var applicativeFirst = new Prelude.Applicative(function () {
    return applyFirst;
}, function (_31) {
    return First(Prelude.pure(Data_Maybe.applicativeMaybe)(_31));
});
var monadFirst = new Prelude.Monad(function () {
    return applicativeFirst;
}, function () {
    return bindFirst;
});
module.exports = {
    First: First, 
    runFirst: runFirst, 
    eqFirst: eqFirst, 
    ordFirst: ordFirst, 
    boundedFirst: boundedFirst, 
    functorFirst: functorFirst, 
    applyFirst: applyFirst, 
    applicativeFirst: applicativeFirst, 
    bindFirst: bindFirst, 
    monadFirst: monadFirst, 
    extendFirst: extendFirst, 
    invariantFirst: invariantFirst, 
    showFirst: showFirst, 
    semigroupFirst: semigroupFirst, 
    monoidFirst: monoidFirst
};

},{"Control.Comonad":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Comonad/index.js","Control.Extend":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Functor.Invariant/index.js","Data.Maybe":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Maybe/index.js","Data.Monoid":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Maybe.Last/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Last = function (x) {
    return x;
};
var showLast = function (__dict_Show_0) {
    return new Prelude.Show(function (_10) {
        return "Last (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_0))(_10) + ")");
    });
};
var semigroupLast = new Prelude.Semigroup(function (last) {
    return function (_11) {
        if (_11 instanceof Data_Maybe.Just) {
            return _11;
        };
        if (_11 instanceof Data_Maybe.Nothing) {
            return last;
        };
        throw new Error("Failed pattern match at Data.Maybe.Last line 57, column 1 - line 61, column 1: " + [ last.constructor.name, _11.constructor.name ]);
    };
});
var runLast = function (_0) {
    return _0;
};
var monoidLast = new Data_Monoid.Monoid(function () {
    return semigroupLast;
}, Data_Maybe.Nothing.value);
var functorLast = new Prelude.Functor(function (f) {
    return function (_5) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(f)(_5);
    };
});
var invariantLast = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorLast));
var extendLast = new Control_Extend.Extend(function () {
    return functorLast;
}, function (f) {
    return function (_9) {
        return Control_Extend.extend(Data_Maybe.extendMaybe)(function (_29) {
            return f(Last(_29));
        })(_9);
    };
});
var eqLast = function (__dict_Eq_2) {
    return new Prelude.Eq(function (_1) {
        return function (_2) {
            return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_2))(_1)(_2);
        };
    });
};
var ordLast = function (__dict_Ord_1) {
    return new Prelude.Ord(function () {
        return eqLast(__dict_Ord_1["__superclass_Prelude.Eq_0"]());
    }, function (_3) {
        return function (_4) {
            return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_1))(_3)(_4);
        };
    });
};
var boundedLast = function (__dict_Bounded_3) {
    return new Prelude.Bounded(Prelude.bottom(Data_Maybe.boundedMaybe(__dict_Bounded_3)), Prelude.top(Data_Maybe.boundedMaybe(__dict_Bounded_3)));
};
var applyLast = new Prelude.Apply(function () {
    return functorLast;
}, function (_6) {
    return function (_7) {
        return Prelude["<*>"](Data_Maybe.applyMaybe)(_6)(_7);
    };
});
var bindLast = new Prelude.Bind(function () {
    return applyLast;
}, function (_8) {
    return function (f) {
        return Prelude.bind(Data_Maybe.bindMaybe)(_8)(function (_30) {
            return runLast(f(_30));
        });
    };
});
var applicativeLast = new Prelude.Applicative(function () {
    return applyLast;
}, function (_31) {
    return Last(Prelude.pure(Data_Maybe.applicativeMaybe)(_31));
});
var monadLast = new Prelude.Monad(function () {
    return applicativeLast;
}, function () {
    return bindLast;
});
module.exports = {
    Last: Last, 
    runLast: runLast, 
    eqLast: eqLast, 
    ordLast: ordLast, 
    boundedLast: boundedLast, 
    functorLast: functorLast, 
    applyLast: applyLast, 
    applicativeLast: applicativeLast, 
    bindLast: bindLast, 
    monadLast: monadLast, 
    extendLast: extendLast, 
    invariantLast: invariantLast, 
    showLast: showLast, 
    semigroupLast: semigroupLast, 
    monoidLast: monoidLast
};

},{"Control.Comonad":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Comonad/index.js","Control.Extend":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Functor.Invariant/index.js","Data.Maybe":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Maybe/index.js","Data.Monoid":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Maybe/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Extend = require("Control.Extend");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Nothing = (function () {
    function Nothing() {

    };
    Nothing.value = new Nothing();
    return Nothing;
})();
var Just = (function () {
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    return Just;
})();
var showMaybe = function (__dict_Show_0) {
    return new Prelude.Show(function (_13) {
        if (_13 instanceof Just) {
            return "Just (" + (Prelude.show(__dict_Show_0)(_13.value0) + ")");
        };
        if (_13 instanceof Nothing) {
            return "Nothing";
        };
        throw new Error("Failed pattern match at Data.Maybe line 289, column 1 - line 291, column 19: " + [ _13.constructor.name ]);
    });
};
var semigroupMaybe = function (__dict_Semigroup_2) {
    return new Prelude.Semigroup(function (_7) {
        return function (_8) {
            if (_7 instanceof Nothing) {
                return _8;
            };
            if (_8 instanceof Nothing) {
                return _7;
            };
            if (_7 instanceof Just && _8 instanceof Just) {
                return new Just(Prelude["<>"](__dict_Semigroup_2)(_7.value0)(_8.value0));
            };
            throw new Error("Failed pattern match at Data.Maybe line 231, column 1 - line 236, column 1: " + [ _7.constructor.name, _8.constructor.name ]);
        };
    });
};
var monoidMaybe = function (__dict_Semigroup_6) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMaybe(__dict_Semigroup_6);
    }, Nothing.value);
};
var maybe$prime = function (g) {
    return function (f) {
        return function (_1) {
            if (_1 instanceof Nothing) {
                return g(Prelude.unit);
            };
            if (_1 instanceof Just) {
                return f(_1.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 39, column 1 - line 40, column 1: " + [ g.constructor.name, f.constructor.name, _1.constructor.name ]);
        };
    };
};
var maybe = function (b) {
    return function (f) {
        return function (_0) {
            if (_0 instanceof Nothing) {
                return b;
            };
            if (_0 instanceof Just) {
                return f(_0.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 26, column 1 - line 27, column 1: " + [ b.constructor.name, f.constructor.name, _0.constructor.name ]);
        };
    };
};
var isNothing = maybe(true)(Prelude["const"](false));
var isJust = maybe(false)(Prelude["const"](true));
var functorMaybe = new Prelude.Functor(function (fn) {
    return function (_2) {
        if (_2 instanceof Just) {
            return new Just(fn(_2.value0));
        };
        return Nothing.value;
    };
});
var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));
var fromMaybe$prime = function (a) {
    return maybe$prime(a)(Prelude.id(Prelude.categoryFn));
};
var fromMaybe = function (a) {
    return maybe(a)(Prelude.id(Prelude.categoryFn));
};
var extendMaybe = new Control_Extend.Extend(function () {
    return functorMaybe;
}, function (f) {
    return function (_6) {
        if (_6 instanceof Nothing) {
            return Nothing.value;
        };
        return new Just(f(_6));
    };
});
var eqMaybe = function (__dict_Eq_8) {
    return new Prelude.Eq(function (_9) {
        return function (_10) {
            if (_9 instanceof Nothing && _10 instanceof Nothing) {
                return true;
            };
            if (_9 instanceof Just && _10 instanceof Just) {
                return Prelude["=="](__dict_Eq_8)(_9.value0)(_10.value0);
            };
            return false;
        };
    });
};
var ordMaybe = function (__dict_Ord_4) {
    return new Prelude.Ord(function () {
        return eqMaybe(__dict_Ord_4["__superclass_Prelude.Eq_0"]());
    }, function (_11) {
        return function (_12) {
            if (_11 instanceof Just && _12 instanceof Just) {
                return Prelude.compare(__dict_Ord_4)(_11.value0)(_12.value0);
            };
            if (_11 instanceof Nothing && _12 instanceof Nothing) {
                return Prelude.EQ.value;
            };
            if (_11 instanceof Nothing) {
                return Prelude.LT.value;
            };
            if (_12 instanceof Nothing) {
                return Prelude.GT.value;
            };
            throw new Error("Failed pattern match at Data.Maybe line 269, column 1 - line 275, column 1: " + [ _11.constructor.name, _12.constructor.name ]);
        };
    });
};
var boundedMaybe = function (__dict_Bounded_11) {
    return new Prelude.Bounded(Nothing.value, new Just(Prelude.top(__dict_Bounded_11)));
};
var boundedOrdMaybe = function (__dict_BoundedOrd_10) {
    return new Prelude.BoundedOrd(function () {
        return boundedMaybe(__dict_BoundedOrd_10["__superclass_Prelude.Bounded_0"]());
    }, function () {
        return ordMaybe(__dict_BoundedOrd_10["__superclass_Prelude.Ord_1"]());
    });
};
var applyMaybe = new Prelude.Apply(function () {
    return functorMaybe;
}, function (_3) {
    return function (x) {
        if (_3 instanceof Just) {
            return Prelude["<$>"](functorMaybe)(_3.value0)(x);
        };
        if (_3 instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 121, column 1 - line 145, column 1: " + [ _3.constructor.name, x.constructor.name ]);
    };
});
var bindMaybe = new Prelude.Bind(function () {
    return applyMaybe;
}, function (_5) {
    return function (k) {
        if (_5 instanceof Just) {
            return k(_5.value0);
        };
        if (_5 instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 180, column 1 - line 199, column 1: " + [ _5.constructor.name, k.constructor.name ]);
    };
});
var booleanAlgebraMaybe = function (__dict_BooleanAlgebra_12) {
    return new Prelude.BooleanAlgebra(function () {
        return boundedMaybe(__dict_BooleanAlgebra_12["__superclass_Prelude.Bounded_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.conj(__dict_BooleanAlgebra_12))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.disj(__dict_BooleanAlgebra_12))(x))(y);
        };
    }, Prelude.map(functorMaybe)(Prelude.not(__dict_BooleanAlgebra_12)));
};
var semiringMaybe = function (__dict_Semiring_1) {
    return new Prelude.Semiring(function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.add(__dict_Semiring_1))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.mul(__dict_Semiring_1))(x))(y);
        };
    }, new Just(Prelude.one(__dict_Semiring_1)), new Just(Prelude.zero(__dict_Semiring_1)));
};
var moduloSemiringMaybe = function (__dict_ModuloSemiring_7) {
    return new Prelude.ModuloSemiring(function () {
        return semiringMaybe(__dict_ModuloSemiring_7["__superclass_Prelude.Semiring_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.div(__dict_ModuloSemiring_7))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.mod(__dict_ModuloSemiring_7))(x))(y);
        };
    });
};
var ringMaybe = function (__dict_Ring_3) {
    return new Prelude.Ring(function () {
        return semiringMaybe(__dict_Ring_3["__superclass_Prelude.Semiring_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.sub(__dict_Ring_3))(x))(y);
        };
    });
};
var divisionRingMaybe = function (__dict_DivisionRing_9) {
    return new Prelude.DivisionRing(function () {
        return moduloSemiringMaybe(__dict_DivisionRing_9["__superclass_Prelude.ModuloSemiring_1"]());
    }, function () {
        return ringMaybe(__dict_DivisionRing_9["__superclass_Prelude.Ring_0"]());
    });
};
var numMaybe = function (__dict_Num_5) {
    return new Prelude.Num(function () {
        return divisionRingMaybe(__dict_Num_5["__superclass_Prelude.DivisionRing_0"]());
    });
};
var applicativeMaybe = new Prelude.Applicative(function () {
    return applyMaybe;
}, Just.create);
var monadMaybe = new Prelude.Monad(function () {
    return applicativeMaybe;
}, function () {
    return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function () {
    return functorMaybe;
}, function (_4) {
    return function (r) {
        if (_4 instanceof Nothing) {
            return r;
        };
        return _4;
    };
});
var plusMaybe = new Control_Plus.Plus(function () {
    return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
    return plusMaybe;
}, function () {
    return applicativeMaybe;
});
var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
    return alternativeMaybe;
}, function () {
    return monadMaybe;
});
module.exports = {
    Nothing: Nothing, 
    Just: Just, 
    isNothing: isNothing, 
    isJust: isJust, 
    "fromMaybe'": fromMaybe$prime, 
    fromMaybe: fromMaybe, 
    "maybe'": maybe$prime, 
    maybe: maybe, 
    functorMaybe: functorMaybe, 
    applyMaybe: applyMaybe, 
    applicativeMaybe: applicativeMaybe, 
    altMaybe: altMaybe, 
    plusMaybe: plusMaybe, 
    alternativeMaybe: alternativeMaybe, 
    bindMaybe: bindMaybe, 
    monadMaybe: monadMaybe, 
    monadPlusMaybe: monadPlusMaybe, 
    extendMaybe: extendMaybe, 
    invariantMaybe: invariantMaybe, 
    semigroupMaybe: semigroupMaybe, 
    monoidMaybe: monoidMaybe, 
    semiringMaybe: semiringMaybe, 
    moduloSemiringMaybe: moduloSemiringMaybe, 
    ringMaybe: ringMaybe, 
    divisionRingMaybe: divisionRingMaybe, 
    numMaybe: numMaybe, 
    eqMaybe: eqMaybe, 
    ordMaybe: ordMaybe, 
    boundedMaybe: boundedMaybe, 
    boundedOrdMaybe: boundedOrdMaybe, 
    booleanAlgebraMaybe: booleanAlgebraMaybe, 
    showMaybe: showMaybe
};

},{"Control.Alt":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Alt/index.js","Control.Alternative":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Alternative/index.js","Control.Extend":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Extend/index.js","Control.MonadPlus":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.MonadPlus/index.js","Control.Plus":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Plus/index.js","Data.Functor.Invariant":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Additive/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Additive = function (x) {
    return x;
};
var showAdditive = function (__dict_Show_0) {
    return new Prelude.Show(function (_11) {
        return "Additive (" + (Prelude.show(__dict_Show_0)(_11) + ")");
    });
};
var semigroupAdditive = function (__dict_Semiring_1) {
    return new Prelude.Semigroup(function (_12) {
        return function (_13) {
            return Prelude["+"](__dict_Semiring_1)(_12)(_13);
        };
    });
};
var runAdditive = function (_0) {
    return _0;
};
var monoidAdditive = function (__dict_Semiring_3) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAdditive(__dict_Semiring_3);
    }, Prelude.zero(__dict_Semiring_3));
};
var invariantAdditive = new Data_Functor_Invariant.Invariant(function (f) {
    return function (_9) {
        return function (_10) {
            return f(_10);
        };
    };
});
var functorAdditive = new Prelude.Functor(function (f) {
    return function (_5) {
        return f(_5);
    };
});
var extendAdditive = new Control_Extend.Extend(function () {
    return functorAdditive;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqAdditive = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_1) {
        return function (_2) {
            return Prelude["=="](__dict_Eq_4)(_1)(_2);
        };
    });
};
var ordAdditive = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqAdditive(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_3) {
        return function (_4) {
            return Prelude.compare(__dict_Ord_2)(_3)(_4);
        };
    });
};
var comonadAdditive = new Control_Comonad.Comonad(function () {
    return extendAdditive;
}, runAdditive);
var applyAdditive = new Prelude.Apply(function () {
    return functorAdditive;
}, function (_6) {
    return function (_7) {
        return _6(_7);
    };
});
var bindAdditive = new Prelude.Bind(function () {
    return applyAdditive;
}, function (_8) {
    return function (f) {
        return f(_8);
    };
});
var applicativeAdditive = new Prelude.Applicative(function () {
    return applyAdditive;
}, Additive);
var monadAdditive = new Prelude.Monad(function () {
    return applicativeAdditive;
}, function () {
    return bindAdditive;
});
module.exports = {
    Additive: Additive, 
    runAdditive: runAdditive, 
    eqAdditive: eqAdditive, 
    ordAdditive: ordAdditive, 
    functorAdditive: functorAdditive, 
    applyAdditive: applyAdditive, 
    applicativeAdditive: applicativeAdditive, 
    bindAdditive: bindAdditive, 
    monadAdditive: monadAdditive, 
    extendAdditive: extendAdditive, 
    comonadAdditive: comonadAdditive, 
    invariantAdditive: invariantAdditive, 
    showAdditive: showAdditive, 
    semigroupAdditive: semigroupAdditive, 
    monoidAdditive: monoidAdditive
};

},{"Control.Comonad":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Comonad/index.js","Control.Extend":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Conj/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Monoid = require("Data.Monoid");
var Conj = function (x) {
    return x;
};
var showConj = function (__dict_Show_0) {
    return new Prelude.Show(function (_9) {
        return "Conj (" + (Prelude.show(__dict_Show_0)(_9) + ")");
    });
};
var semiringConj = function (__dict_BooleanAlgebra_1) {
    return new Prelude.Semiring(function (_12) {
        return function (_13) {
            return Prelude.conj(__dict_BooleanAlgebra_1)(_12)(_13);
        };
    }, function (_14) {
        return function (_15) {
            return Prelude.disj(__dict_BooleanAlgebra_1)(_14)(_15);
        };
    }, Prelude.bottom(__dict_BooleanAlgebra_1["__superclass_Prelude.Bounded_0"]()), Prelude.top(__dict_BooleanAlgebra_1["__superclass_Prelude.Bounded_0"]()));
};
var semigroupConj = function (__dict_BooleanAlgebra_2) {
    return new Prelude.Semigroup(function (_10) {
        return function (_11) {
            return Prelude.conj(__dict_BooleanAlgebra_2)(_10)(_11);
        };
    });
};
var runConj = function (_0) {
    return _0;
};
var monoidConj = function (__dict_BooleanAlgebra_4) {
    return new Data_Monoid.Monoid(function () {
        return semigroupConj(__dict_BooleanAlgebra_4);
    }, Prelude.top(__dict_BooleanAlgebra_4["__superclass_Prelude.Bounded_0"]()));
};
var functorConj = new Prelude.Functor(function (f) {
    return function (_5) {
        return f(_5);
    };
});
var extendConj = new Control_Extend.Extend(function () {
    return functorConj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqConj = function (__dict_Eq_5) {
    return new Prelude.Eq(function (_1) {
        return function (_2) {
            return Prelude["=="](__dict_Eq_5)(_1)(_2);
        };
    });
};
var ordConj = function (__dict_Ord_3) {
    return new Prelude.Ord(function () {
        return eqConj(__dict_Ord_3["__superclass_Prelude.Eq_0"]());
    }, function (_3) {
        return function (_4) {
            return Prelude.compare(__dict_Ord_3)(_3)(_4);
        };
    });
};
var comonadConj = new Control_Comonad.Comonad(function () {
    return extendConj;
}, runConj);
var boundedConj = function (__dict_Bounded_6) {
    return new Prelude.Bounded(Prelude.bottom(__dict_Bounded_6), Prelude.top(__dict_Bounded_6));
};
var applyConj = new Prelude.Apply(function () {
    return functorConj;
}, function (_6) {
    return function (_7) {
        return _6(_7);
    };
});
var bindConj = new Prelude.Bind(function () {
    return applyConj;
}, function (_8) {
    return function (f) {
        return f(_8);
    };
});
var applicativeConj = new Prelude.Applicative(function () {
    return applyConj;
}, Conj);
var monadConj = new Prelude.Monad(function () {
    return applicativeConj;
}, function () {
    return bindConj;
});
module.exports = {
    Conj: Conj, 
    runConj: runConj, 
    eqConj: eqConj, 
    ordConj: ordConj, 
    boundedConj: boundedConj, 
    functorConj: functorConj, 
    applyConj: applyConj, 
    applicativeConj: applicativeConj, 
    bindConj: bindConj, 
    monadConj: monadConj, 
    extendConj: extendConj, 
    comonadConj: comonadConj, 
    showConj: showConj, 
    semigroupConj: semigroupConj, 
    monoidConj: monoidConj, 
    semiringConj: semiringConj
};

},{"Control.Comonad":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Comonad/index.js","Control.Extend":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Extend/index.js","Data.Monoid":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Disj/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Monoid = require("Data.Monoid");
var Disj = function (x) {
    return x;
};
var showDisj = function (__dict_Show_0) {
    return new Prelude.Show(function (_9) {
        return "Disj (" + (Prelude.show(__dict_Show_0)(_9) + ")");
    });
};
var semiringDisj = function (__dict_BooleanAlgebra_1) {
    return new Prelude.Semiring(function (_12) {
        return function (_13) {
            return Prelude.disj(__dict_BooleanAlgebra_1)(_12)(_13);
        };
    }, function (_14) {
        return function (_15) {
            return Prelude.conj(__dict_BooleanAlgebra_1)(_14)(_15);
        };
    }, Prelude.top(__dict_BooleanAlgebra_1["__superclass_Prelude.Bounded_0"]()), Prelude.bottom(__dict_BooleanAlgebra_1["__superclass_Prelude.Bounded_0"]()));
};
var semigroupDisj = function (__dict_BooleanAlgebra_2) {
    return new Prelude.Semigroup(function (_10) {
        return function (_11) {
            return Prelude.disj(__dict_BooleanAlgebra_2)(_10)(_11);
        };
    });
};
var runDisj = function (_0) {
    return _0;
};
var monoidDisj = function (__dict_BooleanAlgebra_4) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDisj(__dict_BooleanAlgebra_4);
    }, Prelude.bottom(__dict_BooleanAlgebra_4["__superclass_Prelude.Bounded_0"]()));
};
var functorDisj = new Prelude.Functor(function (f) {
    return function (_5) {
        return f(_5);
    };
});
var extendDisj = new Control_Extend.Extend(function () {
    return functorDisj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDisj = function (__dict_Eq_5) {
    return new Prelude.Eq(function (_1) {
        return function (_2) {
            return Prelude["=="](__dict_Eq_5)(_1)(_2);
        };
    });
};
var ordDisj = function (__dict_Ord_3) {
    return new Prelude.Ord(function () {
        return eqDisj(__dict_Ord_3["__superclass_Prelude.Eq_0"]());
    }, function (_3) {
        return function (_4) {
            return Prelude.compare(__dict_Ord_3)(_3)(_4);
        };
    });
};
var comonadDisj = new Control_Comonad.Comonad(function () {
    return extendDisj;
}, runDisj);
var boundedDisj = function (__dict_Bounded_6) {
    return new Prelude.Bounded(Prelude.bottom(__dict_Bounded_6), Prelude.top(__dict_Bounded_6));
};
var applyDisj = new Prelude.Apply(function () {
    return functorDisj;
}, function (_6) {
    return function (_7) {
        return _6(_7);
    };
});
var bindDisj = new Prelude.Bind(function () {
    return applyDisj;
}, function (_8) {
    return function (f) {
        return f(_8);
    };
});
var applicativeDisj = new Prelude.Applicative(function () {
    return applyDisj;
}, Disj);
var monadDisj = new Prelude.Monad(function () {
    return applicativeDisj;
}, function () {
    return bindDisj;
});
module.exports = {
    Disj: Disj, 
    runDisj: runDisj, 
    eqDisj: eqDisj, 
    ordDisj: ordDisj, 
    boundedDisj: boundedDisj, 
    functorDisj: functorDisj, 
    applyDisj: applyDisj, 
    applicativeDisj: applicativeDisj, 
    bindDisj: bindDisj, 
    monadDisj: monadDisj, 
    extendDisj: extendDisj, 
    comonadDisj: comonadDisj, 
    showDisj: showDisj, 
    semigroupDisj: semigroupDisj, 
    monoidDisj: monoidDisj, 
    semiringDisj: semiringDisj
};

},{"Control.Comonad":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Comonad/index.js","Control.Extend":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Extend/index.js","Data.Monoid":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Dual/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Dual = function (x) {
    return x;
};
var showDual = function (__dict_Show_0) {
    return new Prelude.Show(function (_11) {
        return "Dual (" + (Prelude.show(__dict_Show_0)(_11) + ")");
    });
};
var semigroupDual = function (__dict_Semigroup_1) {
    return new Prelude.Semigroup(function (_12) {
        return function (_13) {
            return Prelude["<>"](__dict_Semigroup_1)(_13)(_12);
        };
    });
};
var runDual = function (_0) {
    return _0;
};
var monoidDual = function (__dict_Monoid_3) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDual(__dict_Monoid_3["__superclass_Prelude.Semigroup_0"]());
    }, Data_Monoid.mempty(__dict_Monoid_3));
};
var invariantDual = new Data_Functor_Invariant.Invariant(function (f) {
    return function (_9) {
        return function (_10) {
            return f(_10);
        };
    };
});
var functorDual = new Prelude.Functor(function (f) {
    return function (_5) {
        return f(_5);
    };
});
var extendDual = new Control_Extend.Extend(function () {
    return functorDual;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDual = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_1) {
        return function (_2) {
            return Prelude["=="](__dict_Eq_4)(_1)(_2);
        };
    });
};
var ordDual = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqDual(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_3) {
        return function (_4) {
            return Prelude.compare(__dict_Ord_2)(_3)(_4);
        };
    });
};
var comonadDual = new Control_Comonad.Comonad(function () {
    return extendDual;
}, runDual);
var applyDual = new Prelude.Apply(function () {
    return functorDual;
}, function (_6) {
    return function (_7) {
        return _6(_7);
    };
});
var bindDual = new Prelude.Bind(function () {
    return applyDual;
}, function (_8) {
    return function (f) {
        return f(_8);
    };
});
var applicativeDual = new Prelude.Applicative(function () {
    return applyDual;
}, Dual);
var monadDual = new Prelude.Monad(function () {
    return applicativeDual;
}, function () {
    return bindDual;
});
module.exports = {
    Dual: Dual, 
    runDual: runDual, 
    eqDual: eqDual, 
    ordDual: ordDual, 
    functorDual: functorDual, 
    applyDual: applyDual, 
    applicativeDual: applicativeDual, 
    bindDual: bindDual, 
    monadDual: monadDual, 
    extendDual: extendDual, 
    comonadDual: comonadDual, 
    invariantDual: invariantDual, 
    showDual: showDual, 
    semigroupDual: semigroupDual, 
    monoidDual: monoidDual
};

},{"Control.Comonad":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Comonad/index.js","Control.Extend":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Endo/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Endo = function (x) {
    return x;
};
var semigroupEndo = new Prelude.Semigroup(function (_2) {
    return function (_3) {
        return function (_10) {
            return _2(_3(_10));
        };
    };
});
var runEndo = function (_0) {
    return _0;
};
var monoidEndo = new Data_Monoid.Monoid(function () {
    return semigroupEndo;
}, Prelude.id(Prelude.categoryFn));
var invariantEndo = new Data_Functor_Invariant.Invariant(function (ab) {
    return function (ba) {
        return function (_1) {
            return function (_11) {
                return ab(_1(ba(_11)));
            };
        };
    };
});
module.exports = {
    Endo: Endo, 
    runEndo: runEndo, 
    invariantEndo: invariantEndo, 
    semigroupEndo: semigroupEndo, 
    monoidEndo: monoidEndo
};

},{"Data.Functor.Invariant":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Multiplicative/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Multiplicative = function (x) {
    return x;
};
var showMultiplicative = function (__dict_Show_0) {
    return new Prelude.Show(function (_11) {
        return "Multiplicative (" + (Prelude.show(__dict_Show_0)(_11) + ")");
    });
};
var semigroupMultiplicative = function (__dict_Semiring_1) {
    return new Prelude.Semigroup(function (_12) {
        return function (_13) {
            return Prelude["*"](__dict_Semiring_1)(_12)(_13);
        };
    });
};
var runMultiplicative = function (_0) {
    return _0;
};
var monoidMultiplicative = function (__dict_Semiring_3) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMultiplicative(__dict_Semiring_3);
    }, Prelude.one(__dict_Semiring_3));
};
var invariantMultiplicative = new Data_Functor_Invariant.Invariant(function (f) {
    return function (_9) {
        return function (_10) {
            return f(_10);
        };
    };
});
var functorMultiplicative = new Prelude.Functor(function (f) {
    return function (_5) {
        return f(_5);
    };
});
var extendMultiplicative = new Control_Extend.Extend(function () {
    return functorMultiplicative;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqMultiplicative = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_1) {
        return function (_2) {
            return Prelude["=="](__dict_Eq_4)(_1)(_2);
        };
    });
};
var ordMultiplicative = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqMultiplicative(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_3) {
        return function (_4) {
            return Prelude.compare(__dict_Ord_2)(_3)(_4);
        };
    });
};
var comonadMultiplicative = new Control_Comonad.Comonad(function () {
    return extendMultiplicative;
}, runMultiplicative);
var applyMultiplicative = new Prelude.Apply(function () {
    return functorMultiplicative;
}, function (_6) {
    return function (_7) {
        return _6(_7);
    };
});
var bindMultiplicative = new Prelude.Bind(function () {
    return applyMultiplicative;
}, function (_8) {
    return function (f) {
        return f(_8);
    };
});
var applicativeMultiplicative = new Prelude.Applicative(function () {
    return applyMultiplicative;
}, Multiplicative);
var monadMultiplicative = new Prelude.Monad(function () {
    return applicativeMultiplicative;
}, function () {
    return bindMultiplicative;
});
module.exports = {
    Multiplicative: Multiplicative, 
    runMultiplicative: runMultiplicative, 
    eqMultiplicative: eqMultiplicative, 
    ordMultiplicative: ordMultiplicative, 
    functorMultiplicative: functorMultiplicative, 
    applyMultiplicative: applyMultiplicative, 
    applicativeMultiplicative: applicativeMultiplicative, 
    bindMultiplicative: bindMultiplicative, 
    monadMultiplicative: monadMultiplicative, 
    extendMultiplicative: extendMultiplicative, 
    comonadMultiplicative: comonadMultiplicative, 
    invariantMultiplicative: invariantMultiplicative, 
    showMultiplicative: showMultiplicative, 
    semigroupMultiplicative: semigroupMultiplicative, 
    monoidMultiplicative: monoidMultiplicative
};

},{"Control.Comonad":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Comonad/index.js","Control.Extend":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
    this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
    this.mempty = mempty;
};
var monoidUnit = new Monoid(function () {
    return Prelude.semigroupUnit;
}, Prelude.unit);
var monoidString = new Monoid(function () {
    return Prelude.semigroupString;
}, "");
var monoidArray = new Monoid(function () {
    return Prelude.semigroupArray;
}, [  ]);
var mempty = function (dict) {
    return dict.mempty;
};
var monoidFn = function (__dict_Monoid_0) {
    return new Monoid(function () {
        return Prelude.semigroupFn(__dict_Monoid_0["__superclass_Prelude.Semigroup_0"]());
    }, Prelude["const"](mempty(__dict_Monoid_0)));
};
module.exports = {
    Monoid: Monoid, 
    mempty: mempty, 
    monoidUnit: monoidUnit, 
    monoidFn: monoidFn, 
    monoidString: monoidString, 
    monoidArray: monoidArray
};

},{"Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Traversable/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Traversable

// jshint maxparams: 3

exports.traverseArrayImpl = function () {
  function Cont (fn) {
    this.fn = fn;
  }

  var emptyList = {};

  var ConsCell = function (head, tail) {
    this.head = head;
    this.tail = tail;
  };

  function consList (x) {
    return function (xs) {
      return new ConsCell(x, xs);
    };
  }

  function listToArray (list) {
    var arr = [];
    while (list !== emptyList) {
      arr.push(list.head);
      list = list.tail;
    }
    return arr;
  }

  return function (apply) {
    return function (map) {
      return function (pure) {
        return function (f) {
          var buildFrom = function (x, ys) {
            return apply(map(consList)(f(x)))(ys);
          };

          var go = function (acc, currentLen, xs) {
            if (currentLen === 0) {
              return acc;
            } else {
              var last = xs[currentLen - 1];
              return new Cont(function () {
                return go(buildFrom(last, acc), currentLen - 1, xs);
              });
            }
          };

          return function (array) {
            var result = go(pure(emptyList), array.length, array);
            while (result instanceof Cont) {
              result = result.fn();
            }

            return map(listToArray)(result);
          };
        };
      };
    };
  };
}();

},{}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Traversable/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_First = require("Data.Maybe.First");
var Data_Maybe_Last = require("Data.Maybe.Last");
var Data_Monoid_Additive = require("Data.Monoid.Additive");
var Data_Monoid_Conj = require("Data.Monoid.Conj");
var Data_Monoid_Disj = require("Data.Monoid.Disj");
var Data_Monoid_Dual = require("Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("Data.Monoid.Multiplicative");
var StateL = function (x) {
    return x;
};
var StateR = function (x) {
    return x;
};
var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
    this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.sequence = sequence;
    this.traverse = traverse;
};
var traverse = function (dict) {
    return dict.traverse;
};
var traversableMultiplicative = new Traversable(function () {
    return Data_Foldable.foldableMultiplicative;
}, function () {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (__dict_Applicative_1) {
    return function (_17) {
        return Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(_17);
    };
}, function (__dict_Applicative_0) {
    return function (f) {
        return function (_16) {
            return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(f(_16));
        };
    };
});
var traversableMaybe = new Traversable(function () {
    return Data_Foldable.foldableMaybe;
}, function () {
    return Data_Maybe.functorMaybe;
}, function (__dict_Applicative_3) {
    return function (_3) {
        if (_3 instanceof Data_Maybe.Nothing) {
            return Prelude.pure(__dict_Applicative_3)(Data_Maybe.Nothing.value);
        };
        if (_3 instanceof Data_Maybe.Just) {
            return Prelude["<$>"]((__dict_Applicative_3["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_3.value0);
        };
        throw new Error("Failed pattern match at Data.Traversable line 76, column 1 - line 82, column 1: " + [ _3.constructor.name ]);
    };
}, function (__dict_Applicative_2) {
    return function (f) {
        return function (_2) {
            if (_2 instanceof Data_Maybe.Nothing) {
                return Prelude.pure(__dict_Applicative_2)(Data_Maybe.Nothing.value);
            };
            if (_2 instanceof Data_Maybe.Just) {
                return Prelude["<$>"]((__dict_Applicative_2["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(f(_2.value0));
            };
            throw new Error("Failed pattern match at Data.Traversable line 76, column 1 - line 82, column 1: " + [ f.constructor.name, _2.constructor.name ]);
        };
    };
});
var traversableDual = new Traversable(function () {
    return Data_Foldable.foldableDual;
}, function () {
    return Data_Monoid_Dual.functorDual;
}, function (__dict_Applicative_5) {
    return function (_11) {
        return Prelude["<$>"]((__dict_Applicative_5["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Dual.Dual)(_11);
    };
}, function (__dict_Applicative_4) {
    return function (f) {
        return function (_10) {
            return Prelude["<$>"]((__dict_Applicative_4["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Dual.Dual)(f(_10));
        };
    };
});
var traversableDisj = new Traversable(function () {
    return Data_Foldable.foldableDisj;
}, function () {
    return Data_Monoid_Disj.functorDisj;
}, function (__dict_Applicative_7) {
    return function (_15) {
        return Prelude["<$>"]((__dict_Applicative_7["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Disj.Disj)(_15);
    };
}, function (__dict_Applicative_6) {
    return function (f) {
        return function (_14) {
            return Prelude["<$>"]((__dict_Applicative_6["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Disj.Disj)(f(_14));
        };
    };
});
var traversableConj = new Traversable(function () {
    return Data_Foldable.foldableConj;
}, function () {
    return Data_Monoid_Conj.functorConj;
}, function (__dict_Applicative_9) {
    return function (_13) {
        return Prelude["<$>"]((__dict_Applicative_9["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Conj.Conj)(_13);
    };
}, function (__dict_Applicative_8) {
    return function (f) {
        return function (_12) {
            return Prelude["<$>"]((__dict_Applicative_8["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Conj.Conj)(f(_12));
        };
    };
});
var traversableAdditive = new Traversable(function () {
    return Data_Foldable.foldableAdditive;
}, function () {
    return Data_Monoid_Additive.functorAdditive;
}, function (__dict_Applicative_11) {
    return function (_9) {
        return Prelude["<$>"]((__dict_Applicative_11["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Additive.Additive)(_9);
    };
}, function (__dict_Applicative_10) {
    return function (f) {
        return function (_8) {
            return Prelude["<$>"]((__dict_Applicative_10["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Additive.Additive)(f(_8));
        };
    };
});
var stateR = function (_1) {
    return _1;
};
var stateL = function (_0) {
    return _0;
};
var sequenceDefault = function (__dict_Traversable_12) {
    return function (__dict_Applicative_13) {
        return function (tma) {
            return traverse(__dict_Traversable_12)(__dict_Applicative_13)(Prelude.id(Prelude.categoryFn))(tma);
        };
    };
};
var traversableArray = new Traversable(function () {
    return Data_Foldable.foldableArray;
}, function () {
    return Prelude.functorArray;
}, function (__dict_Applicative_15) {
    return sequenceDefault(traversableArray)(__dict_Applicative_15);
}, function (__dict_Applicative_14) {
    return $foreign.traverseArrayImpl(Prelude.apply(__dict_Applicative_14["__superclass_Prelude.Apply_0"]()))(Prelude.map((__dict_Applicative_14["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(__dict_Applicative_14));
});
var sequence = function (dict) {
    return dict.sequence;
};
var traversableFirst = new Traversable(function () {
    return Data_Foldable.foldableFirst;
}, function () {
    return Data_Maybe_First.functorFirst;
}, function (__dict_Applicative_17) {
    return function (_5) {
        return Prelude["<$>"]((__dict_Applicative_17["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_First.First)(sequence(traversableMaybe)(__dict_Applicative_17)(_5));
    };
}, function (__dict_Applicative_16) {
    return function (f) {
        return function (_4) {
            return Prelude["<$>"]((__dict_Applicative_16["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_First.First)(traverse(traversableMaybe)(__dict_Applicative_16)(f)(_4));
        };
    };
});
var traversableLast = new Traversable(function () {
    return Data_Foldable.foldableLast;
}, function () {
    return Data_Maybe_Last.functorLast;
}, function (__dict_Applicative_19) {
    return function (_7) {
        return Prelude["<$>"]((__dict_Applicative_19["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(__dict_Applicative_19)(_7));
    };
}, function (__dict_Applicative_18) {
    return function (f) {
        return function (_6) {
            return Prelude["<$>"]((__dict_Applicative_18["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(__dict_Applicative_18)(f)(_6));
        };
    };
});
var traverseDefault = function (__dict_Traversable_20) {
    return function (__dict_Applicative_21) {
        return function (f) {
            return function (ta) {
                return sequence(__dict_Traversable_20)(__dict_Applicative_21)(Prelude.map(__dict_Traversable_20["__superclass_Prelude.Functor_0"]())(f)(ta));
            };
        };
    };
};
var functorStateR = new Prelude.Functor(function (f) {
    return function (k) {
        return function (s) {
            var _46 = stateR(k)(s);
            return {
                accum: _46.accum, 
                value: f(_46.value)
            };
        };
    };
});
var functorStateL = new Prelude.Functor(function (f) {
    return function (k) {
        return function (s) {
            var _49 = stateL(k)(s);
            return {
                accum: _49.accum, 
                value: f(_49.value)
            };
        };
    };
});
var $$for = function (__dict_Applicative_26) {
    return function (__dict_Traversable_27) {
        return function (x) {
            return function (f) {
                return traverse(__dict_Traversable_27)(__dict_Applicative_26)(f)(x);
            };
        };
    };
};
var applyStateR = new Prelude.Apply(function () {
    return functorStateR;
}, function (f) {
    return function (x) {
        return function (s) {
            var _52 = stateR(x)(s);
            var _53 = stateR(f)(_52.accum);
            return {
                accum: _53.accum, 
                value: _53.value(_52.value)
            };
        };
    };
});
var applyStateL = new Prelude.Apply(function () {
    return functorStateL;
}, function (f) {
    return function (x) {
        return function (s) {
            var _58 = stateL(f)(s);
            var _59 = stateL(x)(_58.accum);
            return {
                accum: _59.accum, 
                value: _58.value(_59.value)
            };
        };
    };
});
var applicativeStateR = new Prelude.Applicative(function () {
    return applyStateR;
}, function (a) {
    return function (s) {
        return {
            accum: s, 
            value: a
        };
    };
});
var mapAccumR = function (__dict_Traversable_22) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateR(traverse(__dict_Traversable_22)(applicativeStateR)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanr = function (__dict_Traversable_23) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumR(__dict_Traversable_23)(function (b) {
                    return function (a) {
                        var b$prime = f(a)(b);
                        return {
                            accum: b$prime, 
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var applicativeStateL = new Prelude.Applicative(function () {
    return applyStateL;
}, function (a) {
    return function (s) {
        return {
            accum: s, 
            value: a
        };
    };
});
var mapAccumL = function (__dict_Traversable_24) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateL(traverse(__dict_Traversable_24)(applicativeStateL)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanl = function (__dict_Traversable_25) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumL(__dict_Traversable_25)(function (b) {
                    return function (a) {
                        var b$prime = f(b)(a);
                        return {
                            accum: b$prime, 
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
module.exports = {
    Traversable: Traversable, 
    mapAccumR: mapAccumR, 
    mapAccumL: mapAccumL, 
    scanr: scanr, 
    scanl: scanl, 
    "for": $$for, 
    sequenceDefault: sequenceDefault, 
    traverseDefault: traverseDefault, 
    sequence: sequence, 
    traverse: traverse, 
    traversableArray: traversableArray, 
    traversableMaybe: traversableMaybe, 
    traversableFirst: traversableFirst, 
    traversableLast: traversableLast, 
    traversableAdditive: traversableAdditive, 
    traversableDual: traversableDual, 
    traversableConj: traversableConj, 
    traversableDisj: traversableDisj, 
    traversableMultiplicative: traversableMultiplicative
};

},{"./foreign":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Traversable/foreign.js","Data.Foldable":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Foldable/index.js","Data.Maybe":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Maybe/index.js","Data.Maybe.First":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Maybe.First/index.js","Data.Maybe.Last":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Maybe.Last/index.js","Data.Monoid.Additive":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Additive/index.js","Data.Monoid.Conj":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Conj/index.js","Data.Monoid.Disj":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Disj/index.js","Data.Monoid.Dual":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Dual/index.js","Data.Monoid.Multiplicative":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid.Multiplicative/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Tuple/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Control_Biapplicative = require("Control.Biapplicative");
var Control_Biapply = require("Control.Biapply");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Control_Lazy = require("Control.Lazy");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Bifunctor = require("Data.Bifunctor");
var Data_Bitraversable = require("Data.Bitraversable");
var Data_Foldable = require("Data.Foldable");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_First = require("Data.Maybe.First");
var Data_Monoid = require("Data.Monoid");
var Data_Traversable = require("Data.Traversable");
var Tuple = (function () {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
})();
var uncurry = function (f) {
    return function (_5) {
        return f(_5.value0)(_5.value1);
    };
};
var swap = function (_6) {
    return new Tuple(_6.value1, _6.value0);
};
var snd = function (_4) {
    return _4.value1;
};
var showTuple = function (__dict_Show_2) {
    return function (__dict_Show_3) {
        return new Prelude.Show(function (_7) {
            return "Tuple (" + (Prelude.show(__dict_Show_2)(_7.value0) + (") (" + (Prelude.show(__dict_Show_3)(_7.value1) + ")")));
        });
    };
};
var semiringTuple = function (__dict_Semiring_4) {
    return function (__dict_Semiring_5) {
        return new Prelude.Semiring(function (_16) {
            return function (_17) {
                return new Tuple(Prelude.add(__dict_Semiring_4)(_16.value0)(_17.value0), Prelude.add(__dict_Semiring_5)(_16.value1)(_17.value1));
            };
        }, function (_18) {
            return function (_19) {
                return new Tuple(Prelude.mul(__dict_Semiring_4)(_18.value0)(_19.value0), Prelude.mul(__dict_Semiring_5)(_18.value1)(_19.value1));
            };
        }, new Tuple(Prelude.one(__dict_Semiring_4), Prelude.one(__dict_Semiring_5)), new Tuple(Prelude.zero(__dict_Semiring_4), Prelude.zero(__dict_Semiring_5)));
    };
};
var semigroupoidTuple = new Prelude.Semigroupoid(function (_12) {
    return function (_13) {
        return new Tuple(_13.value0, _12.value1);
    };
});
var semigroupTuple = function (__dict_Semigroup_6) {
    return function (__dict_Semigroup_7) {
        return new Prelude.Semigroup(function (_14) {
            return function (_15) {
                return new Tuple(Prelude["<>"](__dict_Semigroup_6)(_14.value0)(_15.value0), Prelude["<>"](__dict_Semigroup_7)(_14.value1)(_15.value1));
            };
        });
    };
};
var ringTuple = function (__dict_Ring_8) {
    return function (__dict_Ring_9) {
        return new Prelude.Ring(function () {
            return semiringTuple(__dict_Ring_8["__superclass_Prelude.Semiring_0"]())(__dict_Ring_9["__superclass_Prelude.Semiring_0"]());
        }, function (_24) {
            return function (_25) {
                return new Tuple(Prelude.sub(__dict_Ring_8)(_24.value0)(_25.value0), Prelude.sub(__dict_Ring_9)(_24.value1)(_25.value1));
            };
        });
    };
};
var monoidTuple = function (__dict_Monoid_14) {
    return function (__dict_Monoid_15) {
        return new Data_Monoid.Monoid(function () {
            return semigroupTuple(__dict_Monoid_14["__superclass_Prelude.Semigroup_0"]())(__dict_Monoid_15["__superclass_Prelude.Semigroup_0"]());
        }, new Tuple(Data_Monoid.mempty(__dict_Monoid_14), Data_Monoid.mempty(__dict_Monoid_15)));
    };
};
var moduloSemiringTuple = function (__dict_ModuloSemiring_17) {
    return function (__dict_ModuloSemiring_18) {
        return new Prelude.ModuloSemiring(function () {
            return semiringTuple(__dict_ModuloSemiring_17["__superclass_Prelude.Semiring_0"]())(__dict_ModuloSemiring_18["__superclass_Prelude.Semiring_0"]());
        }, function (_20) {
            return function (_21) {
                return new Tuple(Prelude.div(__dict_ModuloSemiring_17)(_20.value0)(_21.value0), Prelude.div(__dict_ModuloSemiring_18)(_20.value1)(_21.value1));
            };
        }, function (_22) {
            return function (_23) {
                return new Tuple(Prelude.mod(__dict_ModuloSemiring_17)(_22.value0)(_23.value0), Prelude.mod(__dict_ModuloSemiring_18)(_22.value1)(_23.value1));
            };
        });
    };
};
var lookup = function (__dict_Foldable_19) {
    return function (__dict_Eq_20) {
        return function (a) {
            return function (f) {
                return Data_Maybe_First.runFirst(Data_Foldable.foldMap(__dict_Foldable_19)(Data_Maybe_First.monoidFirst)(function (_2) {
                    var _105 = Prelude["=="](__dict_Eq_20)(a)(_2.value0);
                    if (_105) {
                        return new Data_Maybe.Just(_2.value1);
                    };
                    if (!_105) {
                        return Data_Maybe.Nothing.value;
                    };
                    throw new Error("Failed pattern match at Data.Tuple line 173, column 1 - line 174, column 1: " + [ _105.constructor.name ]);
                })(f));
            };
        };
    };
};
var functorTuple = new Prelude.Functor(function (f) {
    return function (_31) {
        return new Tuple(_31.value0, f(_31.value1));
    };
});
var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));
var fst = function (_3) {
    return _3.value0;
};
var lazyTuple = function (__dict_Lazy_21) {
    return function (__dict_Lazy_22) {
        return new Control_Lazy.Lazy(function (f) {
            return new Tuple(Control_Lazy.defer(__dict_Lazy_21)(function (_0) {
                return fst(f(Prelude.unit));
            }), Control_Lazy.defer(__dict_Lazy_22)(function (_1) {
                return snd(f(Prelude.unit));
            }));
        });
    };
};
var foldableTuple = new Data_Foldable.Foldable(function (__dict_Monoid_23) {
    return function (f) {
        return function (_41) {
            return f(_41.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (_40) {
            return f(z)(_40.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (_39) {
            return f(_39.value1)(z);
        };
    };
});
var traversableTuple = new Data_Traversable.Traversable(function () {
    return foldableTuple;
}, function () {
    return functorTuple;
}, function (__dict_Applicative_1) {
    return function (_46) {
        return Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create(_46.value0))(_46.value1);
    };
}, function (__dict_Applicative_0) {
    return function (f) {
        return function (_45) {
            return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create(_45.value0))(f(_45.value1));
        };
    };
});
var extendTuple = new Control_Extend.Extend(function () {
    return functorTuple;
}, function (f) {
    return function (_38) {
        return new Tuple(_38.value0, f(_38));
    };
});
var eqTuple = function (__dict_Eq_24) {
    return function (__dict_Eq_25) {
        return new Prelude.Eq(function (_8) {
            return function (_9) {
                return Prelude["=="](__dict_Eq_24)(_8.value0)(_9.value0) && Prelude["=="](__dict_Eq_25)(_8.value1)(_9.value1);
            };
        });
    };
};
var ordTuple = function (__dict_Ord_10) {
    return function (__dict_Ord_11) {
        return new Prelude.Ord(function () {
            return eqTuple(__dict_Ord_10["__superclass_Prelude.Eq_0"]())(__dict_Ord_11["__superclass_Prelude.Eq_0"]());
        }, function (_10) {
            return function (_11) {
                var _150 = Prelude.compare(__dict_Ord_10)(_10.value0)(_11.value0);
                if (_150 instanceof Prelude.EQ) {
                    return Prelude.compare(__dict_Ord_11)(_10.value1)(_11.value1);
                };
                return _150;
            };
        });
    };
};
var divisionRingTuple = function (__dict_DivisionRing_26) {
    return function (__dict_DivisionRing_27) {
        return new Prelude.DivisionRing(function () {
            return moduloSemiringTuple(__dict_DivisionRing_26["__superclass_Prelude.ModuloSemiring_1"]())(__dict_DivisionRing_27["__superclass_Prelude.ModuloSemiring_1"]());
        }, function () {
            return ringTuple(__dict_DivisionRing_26["__superclass_Prelude.Ring_0"]())(__dict_DivisionRing_27["__superclass_Prelude.Ring_0"]());
        });
    };
};
var numTuple = function (__dict_Num_12) {
    return function (__dict_Num_13) {
        return new Prelude.Num(function () {
            return divisionRingTuple(__dict_Num_12["__superclass_Prelude.DivisionRing_0"]())(__dict_Num_13["__superclass_Prelude.DivisionRing_0"]());
        });
    };
};
var curry = function (f) {
    return function (a) {
        return function (b) {
            return f(new Tuple(a, b));
        };
    };
};
var comonadTuple = new Control_Comonad.Comonad(function () {
    return extendTuple;
}, snd);
var boundedTuple = function (__dict_Bounded_28) {
    return function (__dict_Bounded_29) {
        return new Prelude.Bounded(new Tuple(Prelude.bottom(__dict_Bounded_28), Prelude.bottom(__dict_Bounded_29)), new Tuple(Prelude.top(__dict_Bounded_28), Prelude.top(__dict_Bounded_29)));
    };
};
var boundedOrdTuple = function (__dict_BoundedOrd_30) {
    return function (__dict_BoundedOrd_31) {
        return new Prelude.BoundedOrd(function () {
            return boundedTuple(__dict_BoundedOrd_30["__superclass_Prelude.Bounded_0"]())(__dict_BoundedOrd_31["__superclass_Prelude.Bounded_0"]());
        }, function () {
            return ordTuple(__dict_BoundedOrd_30["__superclass_Prelude.Ord_1"]())(__dict_BoundedOrd_31["__superclass_Prelude.Ord_1"]());
        });
    };
};
var booleanAlgebraTuple = function (__dict_BooleanAlgebra_32) {
    return function (__dict_BooleanAlgebra_33) {
        return new Prelude.BooleanAlgebra(function () {
            return boundedTuple(__dict_BooleanAlgebra_32["__superclass_Prelude.Bounded_0"]())(__dict_BooleanAlgebra_33["__superclass_Prelude.Bounded_0"]());
        }, function (_26) {
            return function (_27) {
                return new Tuple(Prelude.conj(__dict_BooleanAlgebra_32)(_26.value0)(_27.value0), Prelude.conj(__dict_BooleanAlgebra_33)(_26.value1)(_27.value1));
            };
        }, function (_28) {
            return function (_29) {
                return new Tuple(Prelude.disj(__dict_BooleanAlgebra_32)(_28.value0)(_29.value0), Prelude.disj(__dict_BooleanAlgebra_33)(_28.value1)(_29.value1));
            };
        }, function (_30) {
            return new Tuple(Prelude.not(__dict_BooleanAlgebra_32)(_30.value0), Prelude.not(__dict_BooleanAlgebra_33)(_30.value1));
        });
    };
};
var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (_32) {
            return new Tuple(f(_32.value0), g(_32.value1));
        };
    };
});
var bifoldableTuple = new Data_Bifoldable.Bifoldable(function (__dict_Monoid_37) {
    return function (f) {
        return function (g) {
            return function (_42) {
                return Prelude["<>"](__dict_Monoid_37["__superclass_Prelude.Semigroup_0"]())(f(_42.value0))(g(_42.value1));
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (_44) {
                return g(f(z)(_44.value0))(_44.value1);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (_43) {
                return f(_43.value0)(g(_43.value1)(z));
            };
        };
    };
});
var bitraversableTuple = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableTuple;
}, function () {
    return bifunctorTuple;
}, function (__dict_Applicative_35) {
    return function (_48) {
        return Prelude["<*>"](__dict_Applicative_35["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_35["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create)(_48.value0))(_48.value1);
    };
}, function (__dict_Applicative_34) {
    return function (f) {
        return function (g) {
            return function (_47) {
                return Prelude["<*>"](__dict_Applicative_34["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_34["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create)(f(_47.value0)))(g(_47.value1));
            };
        };
    };
});
var biapplyTuple = new Control_Biapply.Biapply(function () {
    return bifunctorTuple;
}, function (_35) {
    return function (_36) {
        return new Tuple(_35.value0(_36.value0), _35.value1(_36.value1));
    };
});
var biapplicativeTuple = new Control_Biapplicative.Biapplicative(function () {
    return biapplyTuple;
}, Tuple.create);
var applyTuple = function (__dict_Semigroup_38) {
    return new Prelude.Apply(function () {
        return functorTuple;
    }, function (_33) {
        return function (_34) {
            return new Tuple(Prelude["<>"](__dict_Semigroup_38)(_33.value0)(_34.value0), _33.value1(_34.value1));
        };
    });
};
var bindTuple = function (__dict_Semigroup_36) {
    return new Prelude.Bind(function () {
        return applyTuple(__dict_Semigroup_36);
    }, function (_37) {
        return function (f) {
            var _214 = f(_37.value1);
            return new Tuple(Prelude["<>"](__dict_Semigroup_36)(_37.value0)(_214.value0), _214.value1);
        };
    });
};
var applicativeTuple = function (__dict_Monoid_39) {
    return new Prelude.Applicative(function () {
        return applyTuple(__dict_Monoid_39["__superclass_Prelude.Semigroup_0"]());
    }, Tuple.create(Data_Monoid.mempty(__dict_Monoid_39)));
};
var monadTuple = function (__dict_Monoid_16) {
    return new Prelude.Monad(function () {
        return applicativeTuple(__dict_Monoid_16);
    }, function () {
        return bindTuple(__dict_Monoid_16["__superclass_Prelude.Semigroup_0"]());
    });
};
module.exports = {
    Tuple: Tuple, 
    lookup: lookup, 
    swap: swap, 
    uncurry: uncurry, 
    curry: curry, 
    snd: snd, 
    fst: fst, 
    showTuple: showTuple, 
    eqTuple: eqTuple, 
    ordTuple: ordTuple, 
    boundedTuple: boundedTuple, 
    boundedOrdTuple: boundedOrdTuple, 
    semigroupoidTuple: semigroupoidTuple, 
    semigroupTuple: semigroupTuple, 
    monoidTuple: monoidTuple, 
    semiringTuple: semiringTuple, 
    moduloSemiringTuple: moduloSemiringTuple, 
    ringTuple: ringTuple, 
    divisionRingTuple: divisionRingTuple, 
    numTuple: numTuple, 
    booleanAlgebraTuple: booleanAlgebraTuple, 
    functorTuple: functorTuple, 
    invariantTuple: invariantTuple, 
    bifunctorTuple: bifunctorTuple, 
    applyTuple: applyTuple, 
    biapplyTuple: biapplyTuple, 
    applicativeTuple: applicativeTuple, 
    biapplicativeTuple: biapplicativeTuple, 
    bindTuple: bindTuple, 
    monadTuple: monadTuple, 
    extendTuple: extendTuple, 
    comonadTuple: comonadTuple, 
    lazyTuple: lazyTuple, 
    foldableTuple: foldableTuple, 
    bifoldableTuple: bifoldableTuple, 
    traversableTuple: traversableTuple, 
    bitraversableTuple: bitraversableTuple
};

},{"Control.Biapplicative":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Biapplicative/index.js","Control.Biapply":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Biapply/index.js","Control.Comonad":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Comonad/index.js","Control.Extend":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Extend/index.js","Control.Lazy":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Lazy/index.js","Data.Bifoldable":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Bifoldable/index.js","Data.Bifunctor":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Bifunctor/index.js","Data.Bitraversable":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Bitraversable/index.js","Data.Foldable":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Foldable/index.js","Data.Functor.Invariant":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Functor.Invariant/index.js","Data.Maybe":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Maybe/index.js","Data.Maybe.First":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Maybe.First/index.js","Data.Monoid":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Monoid/index.js","Data.Traversable":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Traversable/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Unfoldable/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Data_Array_ST = require("Data.Array.ST");
var Data_Traversable = require("Data.Traversable");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_ST = require("Control.Monad.ST");
var Unfoldable = function (unfoldr) {
    this.unfoldr = unfoldr;
};
var unfoldr = function (dict) {
    return dict.unfoldr;
};
var unfoldableArray = new Unfoldable(function (f) {
    return function (b) {
        return Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(function __do() {
            var _2 = Data_Array_ST.emptySTArray();
            var _1 = Control_Monad_ST.newSTRef(b)();
            (function () {
                while (!(function __do() {
                    var _0 = Control_Monad_ST.readSTRef(_1)();
                    return (function () {
                        var _6 = f(_0);
                        if (_6 instanceof Data_Maybe.Nothing) {
                            return Prelude["return"](Control_Monad_Eff.applicativeEff)(true);
                        };
                        if (_6 instanceof Data_Maybe.Just) {
                            return function __do() {
                                Data_Array_ST.pushSTArray(_2)(_6.value0.value0)();
                                Control_Monad_ST.writeSTRef(_1)(_6.value0.value1)();
                                return Prelude["return"](Control_Monad_Eff.applicativeEff)(false)();
                            };
                        };
                        throw new Error("Failed pattern match at Data.Unfoldable line 29, column 1 - line 49, column 1: " + [ _6.constructor.name ]);
                    })()();
                })()) {

                };
                return {};
            })();
            return Prelude["return"](Control_Monad_Eff.applicativeEff)(_2)();
        }));
    };
});
var replicate = function (__dict_Unfoldable_0) {
    return function (n) {
        return function (v) {
            var step = function (i) {
                var _10 = i <= 0;
                if (_10) {
                    return Data_Maybe.Nothing.value;
                };
                if (!_10) {
                    return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1));
                };
                throw new Error("Failed pattern match at Data.Unfoldable line 52, column 5 - line 53, column 5: " + [ _10.constructor.name ]);
            };
            return unfoldr(__dict_Unfoldable_0)(step)(n);
        };
    };
};
var replicateA = function (__dict_Applicative_1) {
    return function (__dict_Unfoldable_2) {
        return function (__dict_Traversable_3) {
            return function (n) {
                return function (m) {
                    return Data_Traversable.sequence(__dict_Traversable_3)(__dict_Applicative_1)(replicate(__dict_Unfoldable_2)(n)(m));
                };
            };
        };
    };
};
var singleton = function (__dict_Unfoldable_4) {
    return replicate(__dict_Unfoldable_4)(1);
};
var none = function (__dict_Unfoldable_5) {
    return unfoldr(__dict_Unfoldable_5)(Prelude["const"](Data_Maybe.Nothing.value))(Prelude.unit);
};
module.exports = {
    Unfoldable: Unfoldable, 
    singleton: singleton, 
    none: none, 
    replicateA: replicateA, 
    replicate: replicate, 
    unfoldr: unfoldr, 
    unfoldableArray: unfoldableArray
};

},{"Control.Monad.Eff":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Monad.Eff/index.js","Control.Monad.ST":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Monad.ST/index.js","Data.Array.ST":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Array.ST/index.js","Data.Maybe":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Maybe/index.js","Data.Traversable":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Traversable/index.js","Data.Tuple":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.Tuple/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Main/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var Prelude = require("Prelude");
var VexFlow = require("VexFlow");
var Control_Monad_Eff = require("Control.Monad.Eff");
var main = function __do() {
    var _0 = VexFlow.createCanvas("#one canvas")();
    return VexFlow.createRenderer(_0)();
};
module.exports = {
    main: main
};

},{"Control.Monad.Eff":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Monad.Eff/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js","VexFlow":"/Users/Alko/Coding/purescript/purescript-vexflow/output/VexFlow/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Prelude

//- Functor --------------------------------------------------------------------

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }
    return result;
  };
};

//- Bind -----------------------------------------------------------------------

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];
    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }
    return result;
  };
};

//- Monoid ---------------------------------------------------------------------

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    return xs.concat(ys);
  };
};

//- Semiring -------------------------------------------------------------------

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};

//- ModuloSemiring -------------------------------------------------------------

exports.intDiv = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x / y | 0;
  };
};

exports.intMod = function (x) {
  return function (y) {
    return x % y;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};

//- Ring -----------------------------------------------------------------------

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};

//- Eq -------------------------------------------------------------------------

exports.refEq = function (r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.refIneq = function (r1) {
  return function (r2) {
    return r1 !== r2;
  };
};

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs.length !== ys.length) return false;
      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }
      return true;
    };
  };
};

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

//- Ord ------------------------------------------------------------------------

exports.unsafeCompareImpl = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x > y ? gt : eq;
        };
      };
    };
  };
};

//- Bounded --------------------------------------------------------------------

exports.topInt = 2147483647;
exports.bottomInt = -2147483648;

exports.topChar = String.fromCharCode(65535);
exports.bottomChar = String.fromCharCode(0);

//- BooleanAlgebra -------------------------------------------------------------

exports.boolOr = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolAnd = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

exports.boolNot = function (b) {
  return !b;
};

//- Show -----------------------------------------------------------------------

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  /* jshint bitwise: false */
  return n === (n | 0) ? n + ".0" : n.toString();
};

exports.showCharImpl = function (c) {
  var code = c.charCodeAt(0);
  if (code < 0x20 || code === 0x7F) {
    switch (c) {
      case "\a": return "'\\a'";
      case "\b": return "'\\b'";
      case "\f": return "'\\f'";
      case "\n": return "'\\n'";
      case "\r": return "'\\r'";
      case "\t": return "'\\t'";
      case "\v": return "'\\v'";
    }
    return "'\\" + code.toString(10) + "'";
  }
  return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  var l = s.length;
  return "\"" + s.replace(
    /[\0-\x1F\x7F"\\]/g,
    function (c, i) { // jshint ignore:line
      switch (c) {
        case "\"":
        case "\\":
          return "\\" + c;
        case "\a": return "\\a";
        case "\b": return "\\b";
        case "\f": return "\\f";
        case "\n": return "\\n";
        case "\r": return "\\r";
        case "\t": return "\\t";
        case "\v": return "\\v";
      }
      var k = i + 1;
      var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
      return "\\" + c.charCodeAt(0).toString(10) + empty;
    }
  ) + "\"";
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];
    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }
    return "[" + ss.join(",") + "]";
  };
};

},{}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var $foreign = require("./foreign");
var Unit = function (x) {
    return x;
};
var LT = (function () {
    function LT() {

    };
    LT.value = new LT();
    return LT;
})();
var GT = (function () {
    function GT() {

    };
    GT.value = new GT();
    return GT;
})();
var EQ = (function () {
    function EQ() {

    };
    EQ.value = new EQ();
    return EQ;
})();
var Semigroupoid = function (compose) {
    this.compose = compose;
};
var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
    this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
    this.id = id;
};
var Functor = function (map) {
    this.map = map;
};
var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.apply = apply;
};
var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.pure = pure;
};
var Bind = function (__superclass_Prelude$dotApply_0, bind) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.bind = bind;
};
var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
};
var Semigroup = function (append) {
    this.append = append;
};
var Semiring = function (add, mul, one, zero) {
    this.add = add;
    this.mul = mul;
    this.one = one;
    this.zero = zero;
};
var Ring = function (__superclass_Prelude$dotSemiring_0, sub) {
    this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    this.sub = sub;
};
var ModuloSemiring = function (__superclass_Prelude$dotSemiring_0, div, mod) {
    this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    this.div = div;
    this.mod = mod;
};
var DivisionRing = function (__superclass_Prelude$dotModuloSemiring_1, __superclass_Prelude$dotRing_0) {
    this["__superclass_Prelude.ModuloSemiring_1"] = __superclass_Prelude$dotModuloSemiring_1;
    this["__superclass_Prelude.Ring_0"] = __superclass_Prelude$dotRing_0;
};
var Num = function (__superclass_Prelude$dotDivisionRing_0) {
    this["__superclass_Prelude.DivisionRing_0"] = __superclass_Prelude$dotDivisionRing_0;
};
var Eq = function (eq) {
    this.eq = eq;
};
var Ord = function (__superclass_Prelude$dotEq_0, compare) {
    this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
    this.compare = compare;
};
var Bounded = function (bottom, top) {
    this.bottom = bottom;
    this.top = top;
};
var BoundedOrd = function (__superclass_Prelude$dotBounded_0, __superclass_Prelude$dotOrd_1) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this["__superclass_Prelude.Ord_1"] = __superclass_Prelude$dotOrd_1;
};
var BooleanAlgebra = function (__superclass_Prelude$dotBounded_0, conj, disj, not) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this.conj = conj;
    this.disj = disj;
    this.not = not;
};
var Show = function (show) {
    this.show = show;
};
var $dollar = function (f) {
    return function (x) {
        return f(x);
    };
};
var $hash = function (x) {
    return function (f) {
        return f(x);
    };
};
var zero = function (dict) {
    return dict.zero;
};
var unsafeCompare = $foreign.unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
var unit = {};
var top = function (dict) {
    return dict.top;
};
var sub = function (dict) {
    return dict.sub;
};
var $minus = function (__dict_Ring_0) {
    return sub(__dict_Ring_0);
};
var showUnit = new Show(function (_36) {
    return "unit";
});
var showString = new Show($foreign.showStringImpl);
var showOrdering = new Show(function (_37) {
    if (_37 instanceof LT) {
        return "LT";
    };
    if (_37 instanceof GT) {
        return "GT";
    };
    if (_37 instanceof EQ) {
        return "EQ";
    };
    throw new Error("Failed pattern match at Prelude line 863, column 1 - line 868, column 1: " + [ _37.constructor.name ]);
});
var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function (_35) {
    if (_35) {
        return "true";
    };
    if (!_35) {
        return "false";
    };
    throw new Error("Failed pattern match at Prelude line 841, column 1 - line 845, column 1: " + [ _35.constructor.name ]);
});
var show = function (dict) {
    return dict.show;
};
var showArray = function (__dict_Show_1) {
    return new Show($foreign.showArrayImpl(show(__dict_Show_1)));
};
var semiringUnit = new Semiring(function (_8) {
    return function (_9) {
        return unit;
    };
}, function (_10) {
    return function (_11) {
        return unit;
    };
}, unit, unit);
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
        return function (x) {
            return f(g(x));
        };
    };
});
var semigroupUnit = new Semigroup(function (_5) {
    return function (_6) {
        return unit;
    };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupOrdering = new Semigroup(function (_7) {
    return function (y) {
        if (_7 instanceof LT) {
            return LT.value;
        };
        if (_7 instanceof GT) {
            return GT.value;
        };
        if (_7 instanceof EQ) {
            return y;
        };
        throw new Error("Failed pattern match at Prelude line 413, column 1 - line 418, column 1: " + [ _7.constructor.name, y.constructor.name ]);
    };
});
var semigroupArray = new Semigroup($foreign.concatArray);
var ringUnit = new Ring(function () {
    return semiringUnit;
}, function (_12) {
    return function (_13) {
        return unit;
    };
});
var ringNumber = new Ring(function () {
    return semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function () {
    return semiringInt;
}, $foreign.intSub);
var pure = function (dict) {
    return dict.pure;
};
var $$return = function (__dict_Applicative_2) {
    return pure(__dict_Applicative_2);
};
var otherwise = true;
var one = function (dict) {
    return dict.one;
};
var not = function (dict) {
    return dict.not;
};
var negate = function (__dict_Ring_3) {
    return function (a) {
        return $minus(__dict_Ring_3)(zero(__dict_Ring_3["__superclass_Prelude.Semiring_0"]()))(a);
    };
};
var mul = function (dict) {
    return dict.mul;
};
var $times = function (__dict_Semiring_4) {
    return mul(__dict_Semiring_4);
};
var moduloSemiringUnit = new ModuloSemiring(function () {
    return semiringUnit;
}, function (_16) {
    return function (_17) {
        return unit;
    };
}, function (_18) {
    return function (_19) {
        return unit;
    };
});
var moduloSemiringNumber = new ModuloSemiring(function () {
    return semiringNumber;
}, $foreign.numDiv, function (_14) {
    return function (_15) {
        return 0.0;
    };
});
var moduloSemiringInt = new ModuloSemiring(function () {
    return semiringInt;
}, $foreign.intDiv, $foreign.intMod);
var mod = function (dict) {
    return dict.mod;
};
var map = function (dict) {
    return dict.map;
};
var $less$dollar$greater = function (__dict_Functor_5) {
    return map(__dict_Functor_5);
};
var $less$hash$greater = function (__dict_Functor_6) {
    return function (fa) {
        return function (f) {
            return $less$dollar$greater(__dict_Functor_6)(f)(fa);
        };
    };
};
var id = function (dict) {
    return dict.id;
};
var functorArray = new Functor($foreign.arrayMap);
var flip = function (f) {
    return function (b) {
        return function (a) {
            return f(a)(b);
        };
    };
};
var eqUnit = new Eq(function (_20) {
    return function (_21) {
        return true;
    };
});
var ordUnit = new Ord(function () {
    return eqUnit;
}, function (_24) {
    return function (_25) {
        return EQ.value;
    };
});
var eqString = new Eq($foreign.refEq);
var ordString = new Ord(function () {
    return eqString;
}, unsafeCompare);
var eqOrdering = new Eq(function (_22) {
    return function (_23) {
        if (_22 instanceof LT && _23 instanceof LT) {
            return true;
        };
        if (_22 instanceof GT && _23 instanceof GT) {
            return true;
        };
        if (_22 instanceof EQ && _23 instanceof EQ) {
            return true;
        };
        return false;
    };
});
var ordOrdering = new Ord(function () {
    return eqOrdering;
}, function (_26) {
    return function (_27) {
        if (_26 instanceof LT && _27 instanceof LT) {
            return EQ.value;
        };
        if (_26 instanceof EQ && _27 instanceof EQ) {
            return EQ.value;
        };
        if (_26 instanceof GT && _27 instanceof GT) {
            return EQ.value;
        };
        if (_26 instanceof LT) {
            return LT.value;
        };
        if (_26 instanceof EQ && _27 instanceof LT) {
            return GT.value;
        };
        if (_26 instanceof EQ && _27 instanceof GT) {
            return LT.value;
        };
        if (_26 instanceof GT) {
            return GT.value;
        };
        throw new Error("Failed pattern match at Prelude line 668, column 1 - line 677, column 1: " + [ _26.constructor.name, _27.constructor.name ]);
    };
});
var eqNumber = new Eq($foreign.refEq);
var ordNumber = new Ord(function () {
    return eqNumber;
}, unsafeCompare);
var eqInt = new Eq($foreign.refEq);
var ordInt = new Ord(function () {
    return eqInt;
}, unsafeCompare);
var eqChar = new Eq($foreign.refEq);
var ordChar = new Ord(function () {
    return eqChar;
}, unsafeCompare);
var eqBoolean = new Eq($foreign.refEq);
var ordBoolean = new Ord(function () {
    return eqBoolean;
}, unsafeCompare);
var eq = function (dict) {
    return dict.eq;
};
var $eq$eq = function (__dict_Eq_7) {
    return eq(__dict_Eq_7);
};
var eqArray = function (__dict_Eq_8) {
    return new Eq($foreign.eqArrayImpl($eq$eq(__dict_Eq_8)));
};
var divisionRingUnit = new DivisionRing(function () {
    return moduloSemiringUnit;
}, function () {
    return ringUnit;
});
var numUnit = new Num(function () {
    return divisionRingUnit;
});
var divisionRingNumber = new DivisionRing(function () {
    return moduloSemiringNumber;
}, function () {
    return ringNumber;
});
var numNumber = new Num(function () {
    return divisionRingNumber;
});
var div = function (dict) {
    return dict.div;
};
var $div = function (__dict_ModuloSemiring_10) {
    return div(__dict_ModuloSemiring_10);
};
var disj = function (dict) {
    return dict.disj;
};
var $bar$bar = function (__dict_BooleanAlgebra_11) {
    return disj(__dict_BooleanAlgebra_11);
};
var $$const = function (a) {
    return function (_3) {
        return a;
    };
};
var $$void = function (__dict_Functor_12) {
    return function (fa) {
        return $less$dollar$greater(__dict_Functor_12)($$const(unit))(fa);
    };
};
var conj = function (dict) {
    return dict.conj;
};
var $amp$amp = function (__dict_BooleanAlgebra_13) {
    return conj(__dict_BooleanAlgebra_13);
};
var compose = function (dict) {
    return dict.compose;
};
var functorFn = new Functor(compose(semigroupoidFn));
var $less$less$less = function (__dict_Semigroupoid_14) {
    return compose(__dict_Semigroupoid_14);
};
var $greater$greater$greater = function (__dict_Semigroupoid_15) {
    return flip(compose(__dict_Semigroupoid_15));
};
var compare = function (dict) {
    return dict.compare;
};
var ordArray = function (__dict_Ord_16) {
    return new Ord(function () {
        return eqArray(__dict_Ord_16["__superclass_Prelude.Eq_0"]());
    }, function (xs) {
        return function (ys) {
            return $dollar(compare(ordInt)(0))($foreign.ordArrayImpl(function (x) {
                return function (y) {
                    var _46 = compare(__dict_Ord_16)(x)(y);
                    if (_46 instanceof EQ) {
                        return 0;
                    };
                    if (_46 instanceof LT) {
                        return 1;
                    };
                    if (_46 instanceof GT) {
                        return negate(ringInt)(1);
                    };
                    throw new Error("Failed pattern match at Prelude line 660, column 1 - line 666, column 1: " + [ _46.constructor.name ]);
                };
            })(xs)(ys));
        };
    });
};
var $less = function (__dict_Ord_17) {
    return function (a1) {
        return function (a2) {
            var _47 = compare(__dict_Ord_17)(a1)(a2);
            if (_47 instanceof LT) {
                return true;
            };
            return false;
        };
    };
};
var $less$eq = function (__dict_Ord_18) {
    return function (a1) {
        return function (a2) {
            var _48 = compare(__dict_Ord_18)(a1)(a2);
            if (_48 instanceof GT) {
                return false;
            };
            return true;
        };
    };
};
var $greater = function (__dict_Ord_19) {
    return function (a1) {
        return function (a2) {
            var _49 = compare(__dict_Ord_19)(a1)(a2);
            if (_49 instanceof GT) {
                return true;
            };
            return false;
        };
    };
};
var $greater$eq = function (__dict_Ord_20) {
    return function (a1) {
        return function (a2) {
            var _50 = compare(__dict_Ord_20)(a1)(a2);
            if (_50 instanceof LT) {
                return false;
            };
            return true;
        };
    };
};
var categoryFn = new Category(function () {
    return semigroupoidFn;
}, function (x) {
    return x;
});
var boundedUnit = new Bounded(unit, unit);
var boundedOrdering = new Bounded(LT.value, GT.value);
var boundedOrdUnit = new BoundedOrd(function () {
    return boundedUnit;
}, function () {
    return ordUnit;
});
var boundedOrdOrdering = new BoundedOrd(function () {
    return boundedOrdering;
}, function () {
    return ordOrdering;
});
var boundedInt = new Bounded($foreign.bottomInt, $foreign.topInt);
var boundedOrdInt = new BoundedOrd(function () {
    return boundedInt;
}, function () {
    return ordInt;
});
var boundedChar = new Bounded($foreign.bottomChar, $foreign.topChar);
var boundedOrdChar = new BoundedOrd(function () {
    return boundedChar;
}, function () {
    return ordChar;
});
var boundedBoolean = new Bounded(false, true);
var boundedOrdBoolean = new BoundedOrd(function () {
    return boundedBoolean;
}, function () {
    return ordBoolean;
});
var bottom = function (dict) {
    return dict.bottom;
};
var boundedFn = function (__dict_Bounded_21) {
    return new Bounded(function (_29) {
        return bottom(__dict_Bounded_21);
    }, function (_28) {
        return top(__dict_Bounded_21);
    });
};
var booleanAlgebraUnit = new BooleanAlgebra(function () {
    return boundedUnit;
}, function (_30) {
    return function (_31) {
        return unit;
    };
}, function (_32) {
    return function (_33) {
        return unit;
    };
}, function (_34) {
    return unit;
});
var booleanAlgebraFn = function (__dict_BooleanAlgebra_22) {
    return new BooleanAlgebra(function () {
        return boundedFn(__dict_BooleanAlgebra_22["__superclass_Prelude.Bounded_0"]());
    }, function (fx) {
        return function (fy) {
            return function (a) {
                return conj(__dict_BooleanAlgebra_22)(fx(a))(fy(a));
            };
        };
    }, function (fx) {
        return function (fy) {
            return function (a) {
                return disj(__dict_BooleanAlgebra_22)(fx(a))(fy(a));
            };
        };
    }, function (fx) {
        return function (a) {
            return not(__dict_BooleanAlgebra_22)(fx(a));
        };
    });
};
var booleanAlgebraBoolean = new BooleanAlgebra(function () {
    return boundedBoolean;
}, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);
var $div$eq = function (__dict_Eq_9) {
    return function (x) {
        return function (y) {
            return not(booleanAlgebraBoolean)($eq$eq(__dict_Eq_9)(x)(y));
        };
    };
};
var bind = function (dict) {
    return dict.bind;
};
var liftM1 = function (__dict_Monad_23) {
    return function (f) {
        return function (a) {
            return bind(__dict_Monad_23["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                return $$return(__dict_Monad_23["__superclass_Prelude.Applicative_0"]())(f(_0));
            });
        };
    };
};
var $greater$greater$eq = function (__dict_Bind_24) {
    return bind(__dict_Bind_24);
};
var asTypeOf = function (x) {
    return function (_4) {
        return x;
    };
};
var applyFn = new Apply(function () {
    return functorFn;
}, function (f) {
    return function (g) {
        return function (x) {
            return f(x)(g(x));
        };
    };
});
var bindFn = new Bind(function () {
    return applyFn;
}, function (m) {
    return function (f) {
        return function (x) {
            return f(m(x))(x);
        };
    };
});
var apply = function (dict) {
    return dict.apply;
};
var $less$times$greater = function (__dict_Apply_25) {
    return apply(__dict_Apply_25);
};
var liftA1 = function (__dict_Applicative_26) {
    return function (f) {
        return function (a) {
            return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
        };
    };
};
var applicativeFn = new Applicative(function () {
    return applyFn;
}, $$const);
var monadFn = new Monad(function () {
    return applicativeFn;
}, function () {
    return bindFn;
});
var append = function (dict) {
    return dict.append;
};
var $plus$plus = function (__dict_Semigroup_27) {
    return append(__dict_Semigroup_27);
};
var $less$greater = function (__dict_Semigroup_28) {
    return append(__dict_Semigroup_28);
};
var semigroupFn = function (__dict_Semigroup_29) {
    return new Semigroup(function (f) {
        return function (g) {
            return function (x) {
                return $less$greater(__dict_Semigroup_29)(f(x))(g(x));
            };
        };
    });
};
var ap = function (__dict_Monad_30) {
    return function (f) {
        return function (a) {
            return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                    return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_2(_1));
                });
            });
        };
    };
};
var monadArray = new Monad(function () {
    return applicativeArray;
}, function () {
    return bindArray;
});
var bindArray = new Bind(function () {
    return applyArray;
}, $foreign.arrayBind);
var applyArray = new Apply(function () {
    return functorArray;
}, ap(monadArray));
var applicativeArray = new Applicative(function () {
    return applyArray;
}, function (x) {
    return [ x ];
});
var add = function (dict) {
    return dict.add;
};
var $plus = function (__dict_Semiring_31) {
    return add(__dict_Semiring_31);
};
module.exports = {
    LT: LT, 
    GT: GT, 
    EQ: EQ, 
    Show: Show, 
    BooleanAlgebra: BooleanAlgebra, 
    BoundedOrd: BoundedOrd, 
    Bounded: Bounded, 
    Ord: Ord, 
    Eq: Eq, 
    DivisionRing: DivisionRing, 
    Num: Num, 
    Ring: Ring, 
    ModuloSemiring: ModuloSemiring, 
    Semiring: Semiring, 
    Semigroup: Semigroup, 
    Monad: Monad, 
    Bind: Bind, 
    Applicative: Applicative, 
    Apply: Apply, 
    Functor: Functor, 
    Category: Category, 
    Semigroupoid: Semigroupoid, 
    show: show, 
    "||": $bar$bar, 
    "&&": $amp$amp, 
    not: not, 
    disj: disj, 
    conj: conj, 
    bottom: bottom, 
    top: top, 
    unsafeCompare: unsafeCompare, 
    ">=": $greater$eq, 
    "<=": $less$eq, 
    ">": $greater, 
    "<": $less, 
    compare: compare, 
    "/=": $div$eq, 
    "==": $eq$eq, 
    eq: eq, 
    "-": $minus, 
    negate: negate, 
    sub: sub, 
    "/": $div, 
    mod: mod, 
    div: div, 
    "*": $times, 
    "+": $plus, 
    one: one, 
    mul: mul, 
    zero: zero, 
    add: add, 
    "++": $plus$plus, 
    "<>": $less$greater, 
    append: append, 
    ap: ap, 
    liftM1: liftM1, 
    "return": $$return, 
    ">>=": $greater$greater$eq, 
    bind: bind, 
    liftA1: liftA1, 
    pure: pure, 
    "<*>": $less$times$greater, 
    apply: apply, 
    "void": $$void, 
    "<#>": $less$hash$greater, 
    "<$>": $less$dollar$greater, 
    map: map, 
    id: id, 
    ">>>": $greater$greater$greater, 
    "<<<": $less$less$less, 
    compose: compose, 
    otherwise: otherwise, 
    asTypeOf: asTypeOf, 
    "const": $$const, 
    flip: flip, 
    "#": $hash, 
    "$": $dollar, 
    unit: unit, 
    semigroupoidFn: semigroupoidFn, 
    categoryFn: categoryFn, 
    functorFn: functorFn, 
    functorArray: functorArray, 
    applyFn: applyFn, 
    applyArray: applyArray, 
    applicativeFn: applicativeFn, 
    applicativeArray: applicativeArray, 
    bindFn: bindFn, 
    bindArray: bindArray, 
    monadFn: monadFn, 
    monadArray: monadArray, 
    semigroupString: semigroupString, 
    semigroupUnit: semigroupUnit, 
    semigroupFn: semigroupFn, 
    semigroupOrdering: semigroupOrdering, 
    semigroupArray: semigroupArray, 
    semiringInt: semiringInt, 
    semiringNumber: semiringNumber, 
    semiringUnit: semiringUnit, 
    ringInt: ringInt, 
    ringNumber: ringNumber, 
    ringUnit: ringUnit, 
    moduloSemiringInt: moduloSemiringInt, 
    moduloSemiringNumber: moduloSemiringNumber, 
    moduloSemiringUnit: moduloSemiringUnit, 
    divisionRingNumber: divisionRingNumber, 
    divisionRingUnit: divisionRingUnit, 
    numNumber: numNumber, 
    numUnit: numUnit, 
    eqBoolean: eqBoolean, 
    eqInt: eqInt, 
    eqNumber: eqNumber, 
    eqChar: eqChar, 
    eqString: eqString, 
    eqUnit: eqUnit, 
    eqArray: eqArray, 
    eqOrdering: eqOrdering, 
    ordBoolean: ordBoolean, 
    ordInt: ordInt, 
    ordNumber: ordNumber, 
    ordString: ordString, 
    ordChar: ordChar, 
    ordUnit: ordUnit, 
    ordArray: ordArray, 
    ordOrdering: ordOrdering, 
    boundedBoolean: boundedBoolean, 
    boundedUnit: boundedUnit, 
    boundedOrdering: boundedOrdering, 
    boundedInt: boundedInt, 
    boundedChar: boundedChar, 
    boundedFn: boundedFn, 
    boundedOrdBoolean: boundedOrdBoolean, 
    boundedOrdUnit: boundedOrdUnit, 
    boundedOrdOrdering: boundedOrdOrdering, 
    boundedOrdInt: boundedOrdInt, 
    boundedOrdChar: boundedOrdChar, 
    booleanAlgebraBoolean: booleanAlgebraBoolean, 
    booleanAlgebraUnit: booleanAlgebraUnit, 
    booleanAlgebraFn: booleanAlgebraFn, 
    showBoolean: showBoolean, 
    showInt: showInt, 
    showNumber: showNumber, 
    showChar: showChar, 
    showString: showString, 
    showUnit: showUnit, 
    showArray: showArray, 
    showOrdering: showOrdering
};

},{"./foreign":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/foreign.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/VexFlow/foreign.js":[function(require,module,exports){
// module VexFlow

module.exports = {

    createCanvas: (function(div) {
	return function(){
	    console.log ("canvas created: " + div);
	    return $(div)[0];
	};
    }),

    createRenderer: (function(canvas) {
	return function() {
	    console.log(canvas);
	    var renderer = new Vex.Flow.Renderer(document.getElementById(canvas), Vex.Flow.Renderer.Backends.CANVAS);
	    return renderer;
	};
    }),

    createCtx: (function(renderer) {
	return renderer.getContext();
    }),

    createStave: (function(x, y, width) {
	var stave = new Vex.Flow.Stave(x, y, width);
	return stave;
    }),

    drawStave: function(stave, clef, ctx) {
	stave.addClef(clef).setContext(ctx).draw();
    },

    createNote: function(notes, octave, duration) {
    	var note = new Vex.Flow.StaveNote({ keys: notes, duration: duration });
	return note;
    },

    createNewVoice: function(numBeats, beatValue) {
	var voice = new Vex.Flow.Voice({
	    num_beats: numBeats,
	    beat_value: beatValue,
	    resolution: Vex.Flow.RESOLUTION
	});
	return voice;
    },

    addNotesToVoice: function(notes) {
	voice.addTickables(notes);
    },

    // Format and justify the notes to 500 pixels
    formatter: function(voices, pxRes) {	
	var formatter = new Vex.Flow.Formatter().joinVoices(voices).format(voices, pxRes);
	return formatter;
	
    },
	
    drawVoice: function(ctx, stave) {
	voice.draw(ctx, stave);
    }
    
};

},{}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/VexFlow/index.js":[function(require,module,exports){
// Generated by psc version 0.7.6.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_List = require("Data.List");
module.exports = {
    drawVoice: $foreign.drawVoice, 
    formatter: $foreign.formatter, 
    addNotesToVoice: $foreign.addNotesToVoice, 
    createNewVoice: $foreign.createNewVoice, 
    createNote: $foreign.createNote, 
    drawStave: $foreign.drawStave, 
    createStave: $foreign.createStave, 
    createCtx: $foreign.createCtx, 
    createRenderer: $foreign.createRenderer, 
    createCanvas: $foreign.createCanvas
};

},{"./foreign":"/Users/Alko/Coding/purescript/purescript-vexflow/output/VexFlow/foreign.js","Control.Monad.Eff":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Control.Monad.Eff/index.js","Data.List":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Data.List/index.js","Prelude":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Prelude/index.js"}],"/Users/Alko/Coding/purescript/purescript-vexflow/output/browserify.js":[function(require,module,exports){
require('Main').main();

},{"Main":"/Users/Alko/Coding/purescript/purescript-vexflow/output/Main/index.js"}]},{},["/Users/Alko/Coding/purescript/purescript-vexflow/output/browserify.js"]);
